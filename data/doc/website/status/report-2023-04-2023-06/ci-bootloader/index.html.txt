[FreeBSD The Power to Serve]

Donate to FreeBSD

 

-   Home

-   About
    -   Introduction
    -   Features
    -   Advocacy
    -   Marketing
    -   Privacy Policy
    -   Projects
    -   Ports

-   Get FreeBSD
    -   Release Information
    -   Release Engineering

-   Documentation
    -   FAQ
    -   Handbook
    -   Porter's Handbook
    -   Developer's Handbook
    -   Committer's Guide
    -   Manual Pages
    -   Presentations and Papers
    -   Documentation Project Primer
    -   All Books and Articles

-   Community
    -   Mailing Lists
    -   Forums
    -   User Groups
    -   Events
    -   FreeBSD Journal
    -   Q&A (external)

-   Developers
    -   Project Ideas
    -   Git Repository
    -   Subversion Repository
    -   GitHub Mirror
    -   Code Review (Phabricator)
    -   Wiki
    -   Continuous Integration Service

-   Support
    -   Vendors
    -   Security Information
    -   Bug Reports
    -   Submitting Bug Reports
<<<<<<< HEAD
=======
    -   Web Resources

-   Foundation
    -   Monetary Donations
    -   Hardware Donations

-   About
-   Features
-   Applications
-   Advocacy
-   Marketing
-   Administration
-   News
-   Events
-   Press
-   Artwork
-   Logo
-   Donations
-   Legal Notices
-   Privacy Policy

CI Test Harness For Bootloader

Links:
FreeBSD Wiki GSoC Page
Github Project Link

Contact: Sudhanshu Mohan Kashyap <smk@FreeBSD.org>

FreeBSD supports multiple architectures, file systems, and
disk-partitioning schemes. I am trying to write a Lua script which would
allow for testing boot loader of all the architecture combinations
supported in the first and second-tier support, and provide a report on
any broken combinations and expected functionality. If time permits,
further exploration could be done to integrate the script into the
existing build infrastructure (either Jenkins or Github Actions) to
generate a comprehensive summary of the test results.

Currently any changes made by developer might inhibit the ability of the
operating system to boot in some specific environment. These scripts
provide assurance that changes do not cause regressions for the tested
environments. The scripts are designed to be efficient and much less
expensive than a full make universe required today. These attributes
allow developers to routinely use the script, and allow integration into
the CI pipelines without undue cost.

Currently script related work seems to be on track, but certainly ahead
I will need to find all different kinds of QEMU recipes to test
different environments. If anyone has any kind of working QEMU recipe
for currently released versions of FreeBSD, feel free to send to me via
mail at smk@FreeBSD.org .

Sponsor: Google under Google Summer of Code (GSoC) Program

------------------------------------------------------------------------

Last modified on: July 9, 2023 by Sudhanshu Mohan Kashyap

Legal Notices | © 1995-2023 The FreeBSD Project All rights reserved. The
mark FreeBSD is a registered trademark of The FreeBSD Foundation and is
used by The FreeBSD Project with the permission of The FreeBSD
Foundation. Contact
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)
