[FreeBSD The Power to Serve]

Donate to FreeBSD

 

-   Home

-   About
    -   Introduction
    -   Features
    -   Advocacy
    -   Marketing
    -   Privacy Policy
    -   Projects
    -   Ports

-   Get FreeBSD
    -   Release Information
    -   Release Engineering

-   Documentation
    -   FAQ
    -   Handbook
    -   Porter's Handbook
    -   Developer's Handbook
    -   Committer's Guide
    -   Manual Pages
    -   Presentations and Papers
    -   Documentation Project Primer
    -   All Books and Articles

-   Community
    -   Mailing Lists
    -   Forums
    -   User Groups
    -   Events
    -   FreeBSD Journal
    -   Q&A (external)

-   Developers
    -   Project Ideas
    -   Git Repository
    -   Subversion Repository
    -   GitHub Mirror
    -   Code Review (Phabricator)
    -   Wiki
    -   Continuous Integration Service

-   Support
    -   Vendors
    -   Security Information
    -   Bug Reports
    -   Submitting Bug Reports
<<<<<<< HEAD
=======
    -   Web Resources

-   Foundation
    -   Monetary Donations
    -   Hardware Donations

-   About
-   Features
-   Applications
-   Advocacy
-   Marketing
-   Administration
-   News
-   Events
-   Press
-   Artwork
-   Logo
-   Donations
-   Legal Notices
-   Privacy Policy

GCC: updating GCC_DEFAULT and other improvements

Links:
GCC Project URL: https://gcc.gnu.org
GCC 11 release series URL: https://gcc.gnu.org/gcc-11/

Contact: <toolchain@FreeBSD.org>
Contact: Gerald Pfeifer <gerald@pfeifer.com>
Contact: Lorenzo Salvadore <salvadore@FreeBSD.org>
Contact: Piotr Kubaj <pkubaj@FreeBSD.org>

-   salvadore@ worked on the upgrade of GCC_DEFAULT in
    Mk/bsd.default-versions.mk from 10 to 11, opening bug reports based
    on antoine@'s exp-runs and fixing some: many thanks to all those
    that helped with this task. The GCC_DEFAULT update from GCC 10 to
    GCC 11 has now been committed by gerald@ and happened in time for
    the next quarterly branch.
    https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=258378

-   pkubaj@ switched GCC bootstrapping to use Link Time Optimization for
    GCC itself for GCC 11 and newer by introducing a new option enabled
    by default. Building with LTO_BOOTSTRAP enabled requires significant
    amounts of memory and time. How much resources are actually needed
    depends on your configuration (e.g. are you building from ports or
    with poudriere? What is your architecture?). To give an idea, a user
    reported needing 5 GiB of tmpfs, while in PR 265254 a need of about
    130 GB of memory is estimated due to an excessive amount of
    processes spawning (see also
    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=106328). Consider
    disabling LTO_BOOTSTRAP in favor of STANDARD_BOOTSTRAP (or disabling
    BOOTSTRAP altogether) in case that is a problem.

-   pkubaj@ also added lang/gcc12 and lang/gcc13-devel ports and updated
    lang/gcc9 to 9.5.

-   Help is still needed with these three changes to work through with
    upstream GCC (requires src expertise, not ports):

    -   upstreaming lang/gcc11/patch-gets-no-more

    -   upstreaming lang/gcc11/patch-arm-unwind-cxx-support

    -   https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=256874

------------------------------------------------------------------------

Last modified on: August 2, 2022 by Lorenzo Salvadore

Legal Notices | © 1995-2023 The FreeBSD Project All rights reserved. The
mark FreeBSD is a registered trademark of The FreeBSD Foundation and is
used by The FreeBSD Project with the permission of The FreeBSD
Foundation. Contact
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)
