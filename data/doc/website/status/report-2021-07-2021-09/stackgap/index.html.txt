[FreeBSD The Power to Serve]

Donate to FreeBSD

 

-   Home

-   About
    -   Introduction
    -   Features
    -   Advocacy
    -   Marketing
    -   Privacy Policy
    -   Projects
    -   Ports

-   Get FreeBSD
    -   Release Information
    -   Release Engineering

-   Documentation
    -   FAQ
    -   Handbook
    -   Porter's Handbook
    -   Developer's Handbook
    -   Committer's Guide
    -   Manual Pages
    -   Presentations and Papers
    -   Documentation Project Primer
    -   All Books and Articles

-   Community
    -   Mailing Lists
    -   Forums
    -   User Groups
    -   Events
    -   FreeBSD Journal
    -   Q&A (external)

-   Developers
    -   Project Ideas
    -   Git Repository
    -   Subversion Repository
    -   GitHub Mirror
    -   Code Review (Phabricator)
    -   Wiki
    -   Continuous Integration Service

-   Support
    -   Vendors
    -   Security Information
    -   Bug Reports
    -   Submitting Bug Reports
<<<<<<< HEAD
=======
    -   Web Resources

-   Foundation
    -   Monetary Donations
    -   Hardware Donations

-   About
-   Features
-   Applications
-   Advocacy
-   Marketing
-   Administration
-   News
-   Events
-   Press
-   Artwork
-   Logo
-   Donations
-   Legal Notices
-   Privacy Policy

Stack gap handling improvements

Contact: Dawid Gorecki <dgr@semihalf.com>
Contact: Marcin Wojtas <mw@semihalf.com>

Stack gap is a feature that randomizes the stack address by creating a
random sized gap between the top of stack and strings area. The current
implementation of this mitigation can cause issues for some applications
e.g. Firefox (PR239873). Until now the only workaround for this problem
was disabling the stack gap for those programs, as is done for ntpd.

Semihalf team has been working on fixing the root causes of stack gap
related problems.

One of the issues could be observed when setting the stack limit to a
low value with setrlimit(2). Since the stack gap size can be
significant, and the process had no knowledge of how large the stack gap
is, this caused programs to abort immediately after returning from a
syscall due to the stack extending past the limit. The fix involves
increasing the soft resource limit (rlim_cur) by the size of stack gap
during the setrlimit(2) call. This fixes the issue with ntpd without
disabling the stack gap entirely. The patch is currently under review.

The second identified problem is related to the way the thread stacks
are handled. Thread stacks are calculated using the kern.usrstack
sysctl, which should point to the beginning of the stack. This sysctl
returned a constant value depending on the ABI and the presence of the
stack gap was ignored. A new sysctl was introduced, and the thread
library was updated to use it accordingly. Patches D31897 and D31898 are
currently under discussion. These fix the issues with Firefox and
Thunderbird not starting with the stack gap feature enabled.

Sponsor: Stormshield

------------------------------------------------------------------------

Last modified on: November 15, 2021 by Daniel Ebdrup Jensen

Legal Notices | © 1995-2023 The FreeBSD Project All rights reserved. The
mark FreeBSD is a registered trademark of The FreeBSD Foundation and is
used by The FreeBSD Project with the permission of The FreeBSD
Foundation. Contact
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)
