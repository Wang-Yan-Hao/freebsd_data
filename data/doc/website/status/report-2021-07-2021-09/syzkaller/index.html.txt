[FreeBSD The Power to Serve]

Donate to FreeBSD

 

-   Home

-   About
    -   Introduction
    -   Features
    -   Advocacy
    -   Marketing
    -   Privacy Policy
    -   Projects
    -   Ports

-   Get FreeBSD
    -   Release Information
    -   Release Engineering

-   Documentation
    -   FAQ
    -   Handbook
    -   Porter's Handbook
    -   Developer's Handbook
    -   Committer's Guide
    -   Manual Pages
    -   Presentations and Papers
    -   Documentation Project Primer
    -   All Books and Articles

-   Community
    -   Mailing Lists
    -   Forums
    -   User Groups
    -   Events
    -   FreeBSD Journal
    -   Q&A (external)

-   Developers
    -   Project Ideas
    -   Git Repository
    -   Subversion Repository
    -   GitHub Mirror
    -   Code Review (Phabricator)
    -   Wiki
    -   Continuous Integration Service

-   Support
    -   Vendors
    -   Security Information
    -   Bug Reports
    -   Submitting Bug Reports
<<<<<<< HEAD
=======
    -   Web Resources

-   Foundation
    -   Monetary Donations
    -   Hardware Donations

-   About
-   Features
-   Applications
-   Advocacy
-   Marketing
-   Administration
-   News
-   Events
-   Press
-   Artwork
-   Logo
-   Donations
-   Legal Notices
-   Privacy Policy

syzkaller on FreeBSD

Contact: Mark Johnston <markj@FreeBSD.org> Contact: Michael Tuexen
<tuexen@FreeBSD.org>

syzkaller is a coverage-guided operating system kernel fuzzer. See the
syzkaller entry in the 2019q1 quarterly report for an introduction to
syzkaller.

In the past quarter we made a concerted effort to shrink the backlog of
reports from the public syzbot instance. A number of long-standing
locking bugs in the socket subsystem have been fixed, and the SCTP
protocol implementation has seen many bug fixes as well. Beyond that,
many bugs in various other kernel subsystems have been fixed and the
backlog has become substantially smaller over the past quarter. As a
direct result of this effort, we have been able to identify regressions
more easily and fix bugs closer to the time of introduction. Work is
still ongoing to further shrink the backlog.

KASAN (Kernel Address SANitizer) was enabled in the default kernel
configuration used by syzbot, which has greatly enhanced our ability to
root-cause and fix kernel bugs. See the kernel-sanitizers entry in the
2021q2 quarterly report for an introduction to KASAN and KMSAN. KASAN
helps ensure that memory safety bugs manifest more deterministically,
improving syzkaller’s ability to find reproducers and simplifying
debugging.

A KMSAN (Kernel Memory SANitizer) port was committed to FreeBSD’s main
branch in August. Some initial work has been done to make it usable by
syzkaller (mainly, kcov(4) required several small modifications to work
in a KMSAN-enabled kernel), and a number of bugs were found and fixed
using private syzkaller instances.

Goals for the next several months include:

-   Addition of a KMSAN target in syzbot.

-   Further reduction in the syzbot backlog.

-   Upstreaming syzkaller patches to support fuzzing of the Linuxulator.

-   Fuzzing using ZFS-based VM images.

Sponsor: The FreeBSD Foundation

------------------------------------------------------------------------

Last modified on: November 15, 2021 by Daniel Ebdrup Jensen

Legal Notices | © 1995-2023 The FreeBSD Project All rights reserved. The
mark FreeBSD is a registered trademark of The FreeBSD Foundation and is
used by The FreeBSD Project with the permission of The FreeBSD
Foundation. Contact
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)
