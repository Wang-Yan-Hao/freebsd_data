[FreeBSD The Power to Serve]

Donate to FreeBSD

 

-   Home

-   About
    -   Introduction
    -   Features
    -   Advocacy
    -   Marketing
    -   Privacy Policy
    -   Projects
    -   Ports

-   Get FreeBSD
    -   Release Information
    -   Release Engineering

-   Documentation
    -   FAQ
    -   Handbook
    -   Porter's Handbook
    -   Developer's Handbook
    -   Committer's Guide
    -   Manual Pages
    -   Presentations and Papers
    -   Documentation Project Primer
    -   All Books and Articles

-   Community
    -   Mailing Lists
    -   Forums
    -   User Groups
    -   Events
    -   FreeBSD Journal
    -   Q&A (external)

-   Developers
    -   Project Ideas
    -   Git Repository
    -   Subversion Repository
    -   GitHub Mirror
    -   Code Review (Phabricator)
    -   Wiki
    -   Continuous Integration Service

-   Support
    -   Vendors
    -   Security Information
    -   Bug Reports
    -   Submitting Bug Reports
<<<<<<< HEAD
=======
    -   Web Resources

-   Foundation
    -   Monetary Donations
    -   Hardware Donations

-   About
-   Features
-   Applications
-   Advocacy
-   Marketing
-   Administration
-   News
-   Events
-   Press
-   Artwork
-   Logo
-   Donations
-   Legal Notices
-   Privacy Policy

Kernel Address Sanitizer on AArch64

Contact: Kyle Evans <kevans@FreeBSD.org>

Sanitizers are bug detection facilities which use a combination of
instrumentation inserted by the compiler (LLVM in this case) and runtime
state tracking to detect bugs in C code. They can automatically detect
many types of C programming bugs, such as use-after-frees and uses of
uninitialized variables, which may otherwise require substantial effort
to identify. They are particularly effective in combination with
regression testing suites or fuzzing tools such as syzkaller. Unlike
tools such as Valgrind, software must be recompiled to enable a given
sanitizer, but sanitizers can be used in the kernel. Kernels with
sanitizers enabled incur a significant performance overhead from the
runtime, in both CPU utilization and memory usage.

As of 89c52f9d59fa, the kernel address sanitizer that was previously
exclusive to amd64 is ported to arm64.

Prior testing has been done on a decent variety of machines, including:

-   Various Ampere Altra machines

-   QEMU

-   Microsoft’s "Volterra" Devkit

-   bhyve (WIP).

Further testing on other hardware would be both welcomed and
appreciated.

Sponsor: Juniper Networks, Inc.
Sponsor: Klara, Inc.

------------------------------------------------------------------------

Last modified on: March 31, 2023 by Graham Perrin

Legal Notices | © 1995-2023 The FreeBSD Project All rights reserved. The
mark FreeBSD is a registered trademark of The FreeBSD Foundation and is
used by The FreeBSD Project with the permission of The FreeBSD
Foundation. Contact
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)
