[FreeBSD The Power to Serve]

Donate to FreeBSD

 

-   Home

-   About
    -   Introduction
    -   Features
    -   Advocacy
    -   Marketing
    -   Privacy Policy
    -   Projects
    -   Ports

-   Get FreeBSD
    -   Release Information
    -   Release Engineering

-   Documentation
    -   FAQ
    -   Handbook
    -   Porter's Handbook
    -   Developer's Handbook
    -   Committer's Guide
    -   Manual Pages
    -   Presentations and Papers
    -   Documentation Project Primer
    -   All Books and Articles

-   Community
    -   Mailing Lists
    -   Forums
    -   User Groups
    -   Events
    -   FreeBSD Journal
    -   Q&A (external)

-   Developers
    -   Project Ideas
    -   Git Repository
    -   Subversion Repository
    -   GitHub Mirror
    -   Code Review (Phabricator)
    -   Wiki
    -   Continuous Integration Service

-   Support
    -   Vendors
    -   Security Information
    -   Bug Reports
    -   Submitting Bug Reports
<<<<<<< HEAD
=======
    -   Web Resources

-   Foundation
    -   Monetary Donations
    -   Hardware Donations

-   About
-   Features
-   Applications
-   Advocacy
-   Marketing
-   Administration
-   News
-   Events
-   Press
-   Artwork
-   Logo
-   Donations
-   Legal Notices
-   Privacy Policy

FreeBSD Myths and Realities

As the BSD projects (including DragonFlyBSD, FreeBSD, NetBSD, and
OpenBSD) have grown in size, a number of persistent myths have grown up
around them. Some of these are perpetuated by well meaning but misguided
individuals, others by people pursuing their own agendas.

This page aims to dispel those myths while remaining as dispassionate as
possible.

Note: Throughout this page, "*BSD" refers to all of the BSD Projects.
Where a myth or response is specific to a particular project it is
indicated as such.

If you are aware of an omission or error on this page, please let the
FreeBSD Documentation Project mailing list know.

Some myths

-   *BSD has a closed development model, it’s more "Cathedral" than
    "Bazaar"

-   You can’t make your own distributions or derivative works of *BSD

-   *BSD makes a great server, but a poor desktop

-   The *BSD codebase is old, outdated, and dying

-   The *BSD projects are at war with one another, splinter groups form
    each week

-   You can’t cluster *BSD systems (parallel computing)

-   There’s no commercial support for *BSD

-   There are no applications for *BSD

-   *BSD is better than (some other system)

-   (some other system) is better than *BSD

Myth: *BSD has a closed development model, it’s more "Cathedral" than "Bazaar"

Eric Raymond wrote an influential paper, "The Cathedral and the Bazaar"
in which the Linux development model (and the model Eric used for
fetchmail) is held up as an example of how to do "open" development. By
contrast, the model employed by *BSD is often characterized as closed.

The implicit value judgment is that "bazaar" (open) is good, and
"cathedral" (closed) is bad.

If anything, *BSD’s development model is probably more akin to the
"bazaar" that Eric describes than either Linux or fetchmail.

Consider the following;

-   All the *BSD projects: The current, bleeding edge source code for
    FreeBSD, NetBSD, and OpenBSD is available for anyone to download
    from the Internet, 24 hours a day. You don’t need to wait for
    someone else to roll a release.

    FreeBSD: An installable snapshot of the current progress is made
    weekly. These snapshots can be installed exactly like an ordinary
    release, and do not require installation over an existing system.

    OpenBSD: Installable snapshots are generated daily and if Theo
    thinks they are good enough, he uploads them to the mirrors.

    Contrast this with Linux, where new kernel distributions are made
    available on an ad-hoc basis, and where the frequency of each Linux
    distribution release is at the whim of the individual vendor.

    There’s none of the Linux fanfare every time a new kernel is
    released, simply because for most *BSD users it is an every day
    event.

-   Anyone can submit patches, bug reports, documentation, and other
    contributions. They can do this by using a web based interface.

    Pointers to this system litter the documentation.

-   Not everyone can commit code changes to the *BSD code. You need to
    be a committer first. Typically, people are offered "commit privs"
    after they have made a few well-thought out submissions to the
    project using Bugzilla or similar.

    This is identical to the Linux mechanism. Only one person is
    (notionally) allowed to change the Kernel, Linus. But specific areas
    (such as the networking code) are delegated to other people.

    Aside: Nik (nik@FreeBSD.org) is a case in point. After making
    several submissions to the FreeBSD Documentation Project and web
    pages, he was offered "commit privs" so that he did not have to keep
    bothering other committers to commit the changes. He never had to
    ask for them, they were freely given.

------------------------------------------------------------------------

Myth: You cannot make your own distributions or derivative works of *BSD

You can. You just need to say in the documentation and source files
where the code is derived from. Multiple derivative projects exist:

-   DragonflyBSD started as a code fork from FreeBSD 4.X, but it has
    since its own user community and development goals.

-   Gentoo/FreeBSD is an effort by the Gentoo Project to port their
    complete administration facilities to take advantage of the reliable
    FreeBSD kernel and userland. This project is purely incomplete and
    experimental.

-   NanoBSD is another project to produce reduced versions of FreeBSD to
    put it on a Compact Flash card or other mass storage. It is also a
    part of the FreeBSD source tree, see /usr/src/tools/tools/nanobsd.

-   NomadBSD is a persistent live system for USB flash drives, based on
    FreeBSD. Together with automatic hardware detection and setup, it is
    configured to be used as a desktop system that works out of the box,
    but can also be used for data recovery, for educational purposes, or
    to test FreeBSD’s hardware compatibility

-   GhostBSD is derived from FreeBSD, uses the GTK environment to
    provide a beautiful looks and comfortable experience on the modern
    BSD platform offering a natural and native UNIX® work environment.

-   MidnightBSD is a FreeBSD derived operating system developed with
    desktop users in mind. It includes all the software you’d expect for
    your daily tasks: mail, web browsing, word processing, gaming, and
    much more.

-   pfSense is an open source firewall derived from the m0n0wall
    firewall system with several different goals and features, such as
    OpenBSD’s Packet Filter (PF), FreeBSD 6.1, ALTQ support for
    excellent packet queuing and finally an integrated package
    management system for extending the environment with new features.

-   HardenedBSD was Founded in 2014 by Oliver Pinter and Shawn Webb,
    HardenedBSD is a security-enhanced fork of FreeBSD. The HardenedBSD
    Project is implementing many exploit mitigation and security
    technologies on top of FreeBSD.

-   OPNsense started as a fork of pfSense© and m0n0wall in 2014, with
    its first official release in January 2015. The project has evolved
    very quickly while still retaining familiar aspects of both m0n0wall
    and pfSense. A strong focus on security and code quality drives the
    development of the project.

-   TrueNAS is a Network Attached Storage (NAS) software that shares and
    protects data from modern-day threats like ransomware and malware.
    TrueNAS makes it easy for users and client devices to access shared
    data through virtually any sharing protocol.

-   XigmaNAS is an embedded Open Source NAS (Network-Attached Storage)
    distribution based on FreeBSD.

Similarly to DragonflyBSD, OpenBSD was not a standalone project, it
started as a spinoff from the NetBSD project, and has since evolved its
own distinctive approach.

------------------------------------------------------------------------

Myth: *BSD makes a great server, but a poor (UNIX®) desktop

*BSD makes a great server. It also makes a great desktop. Many of the
requirements for a server (responsiveness under load, stability,
effective use of system resources) are the same requirements as for a
desktop machine.

*BSD has access to the same desktop tools (KDE, GNOME, Firefox,
windowmanagers) as Linux. And "office" applications such as LibreOffice
suite work under *BSD too.

------------------------------------------------------------------------

Myth: The BSD codebase is old, outdated, and dying

While the BSD codebase is more than forty-four years old, it is neither
outdated nor dying. Many professional users like the stability that
years of testing has provided FreeBSD. A detailed timeline of the
FreeBSD history can be checked in the FreeBSD Foundation timeline.

Technological enhancements continue to be added to *BSD.

------------------------------------------------------------------------

Myth: The *BSD projects are at war with one another, splinter groups form each week

No. While occasional advocacy may get a touch heated, the *BSD flavors
continue to work with one another. FreeBSD’s Alpha port was initially
heavily based on the work done by the NetBSD team. Both NetBSD and
OpenBSD used the FreeBSD ports collection to bootstrap their own port
sets. FreeBSD and NetBSD both integrate security fixes first discovered
by the OpenBSD team.

The FreeBSD and NetBSD projects separated more than twenty years ago.
OpenBSD and DragonflyBSD are the only new BSD projects to split off in
the last twenty years.

------------------------------------------------------------------------

Myth: You can’t cluster *BSD systems (parallel computing)

The following URLs should disprove this;

-   https://people.FreeBSD.org/~brooks/papers/bsdcon2003/fbsdcluster/
    Brooks Davis’s paper about the implementation of a FreeBSD cluster
    with more than 300 CPU’s

-   http://www.openbsd.org/faq/pf/carp.html OpenBSD’s Common Address
    Redundancy Protocol (CARP) to build redundant clusters at the level
    of the firewall

-   http://pf4freebsd.love2party.net/carp.html OpenBSD’s CARP ported to
    FreeBSD

Note, that freebsd-cluster mailing list is available for further
discussion about clustering of FreeBSD.

------------------------------------------------------------------------

Myth: There’s no commercial support for *BSD

FreeBSD: The FreeBSD Commercial Vendors Page lists companies that offer
commercial support for FreeBSD.

The FreeBSD Mall also offer commercial support, along with shirts, hats,
books, software, and promotional items.

OpenBSD: The OpenBSD Commercial Consulting Page lists companies that
offer commercial support for OpenBSD.

------------------------------------------------------------------------

Myth: There are no applications for *BSD

The free software community started running on predominantly BSD systems
(SunOS and similar). *BSD users can generally compile software written
for these systems without needing to make any changes.

In addition, each *BSD project uses a "ports" system to make the
building of ported software much easier.

FreeBSD: There are currently more than 30,000 applications ready to
download and install in the FreeBSD ports collection. On i386 and AMD64,
the Linux emulation layer will also run the vast majority of Linux
applications. On the AMD64 architectures there is a compatibility layer
to run 32-bit FreeBSD binaries.

NetBSD: The Linux emulation layer will run the vast majority of i386
Linux applications, and the majority of SunOS4 applications can be run
on a SPARCStation.

OpenBSD: There are currently more than 8000 applications ready to
download and install in the OpenBSD ports collection. The Linux
emulation layer will also run the vast majority of i386 Linux
applications, and the majority of SunOS4 applications can be run on a
SPARCStation.

Both NetBSD and OpenBSD are able to use applications in FreeBSD’s ports
collection with minimal effort. Their lower number of ported
applications reflects this.

It is true that most companies when porting to PC Unix will choose Linux
first. Fortunately, *BSD’s Linux emulation layer will run these programs
(Acrobat, StarOffice, Mathematica, WordPerfect, Quake, Intel ICC
compiler, Compaq’s Alpha compiler …​) with few, if any, problems.

As a historical note, the first version of Netscape Navigator that ran
on FreeBSD with Java support was the Linux version. These day you can
also use a native FreeBSD version of Mozilla with a native Java plugin,
all compiled conveniently from ports.

------------------------------------------------------------------------

Myth: *BSD is better than (insert other system)

This is user opinion only.

------------------------------------------------------------------------

Myth: (insert some other system) is better than *BSD

This is user opinion only.

------------------------------------------------------------------------

Contributors

Members of the FreeBSD, NetBSD, and OpenBSD projects have contributed to
this page;

+-----------------------------------------------------------------------+
| Nik Clayton <nik@FreeBSD.org>                                         |
+-----------------------------------------------------------------------+
| Jordan Hubbard <jkh@FreeBSD.org>                                      |
+-----------------------------------------------------------------------+
| Ian F. Darwin <ian@DarwinSys.com>                                     |
+-----------------------------------------------------------------------+
| Adrian Filipi-Martin <adrian@ubergeeks.com>                           |
+-----------------------------------------------------------------------+
| Tom Rhodes <trhodes@FreeBSD.org>                                      |
+-----------------------------------------------------------------------+

------------------------------------------------------------------------

Last modified on: November 4, 2022 by Graham Perrin

Legal Notices | © 1995-2023 The FreeBSD Project All rights reserved. The
mark FreeBSD is a registered trademark of The FreeBSD Foundation and is
used by The FreeBSD Project with the permission of The FreeBSD
Foundation. Contact
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)
