
-    Preface
    -   Intended Audience
    -   Fourth Edition
    -   Third Edition
    -   Second Edition (2004)
    -   First Edition (2001)
    -   Organization of This Book
    -   Conventions used in this book
    -   Acknowledgments
-    Part I. Getting Started
-    Chapter 1. Introduction
    -   1.1. Synopsis
    -   1.2. Welcome to FreeBSD!
    -   1.3. About the FreeBSD Project
-    Chapter 2. Installing FreeBSD
    -   2.1. Synopsis
    -   2.2. Minimum Hardware Requirements
    -   2.3. Pre-Installation Tasks
    -   2.4. Starting the Installation
    -   2.5. Using bsdinstall
    -   2.6. Allocating Disk Space
    -   2.7. Fetching Distribution Files
    -   2.8. Network Interfaces, Accounts, Time Zone, Services and
        Hardening
    -   2.9. Troubleshooting
    -   2.10. Using the Live CD
-    Chapter 3. FreeBSD Basics
    -   3.1. Synopsis
    -   3.2. Virtual Consoles and Terminals
    -   3.3. Users and Basic Account Management
    -   3.4. Permissions
    -   3.5. Directory Structure
    -   3.6. Disk Organization
    -   3.7. Mounting and Unmounting File Systems
    -   3.8. Processes and Daemons
    -   3.9. Shells
    -   3.10. Text Editors
    -   3.11. Devices and Device Nodes
    -   3.12. Manual Pages
-    Chapter 4. Installing Applications: Packages and Ports
    -   4.1. Synopsis
    -   4.2. Overview of Software Installation
    -   4.3. Finding Software
    -   4.4. Using pkg for Binary Package Management
    -   4.5. Using the Ports Collection
    -   4.6. Building Packages with Poudriere
    -   4.7. Post-Installation Considerations
    -   4.8. Dealing with Broken Ports
-    Chapter 5. The X Window System
    -   5.1. Synopsis
    -   5.2. Installing Xorg
    -   5.3. Graphic card drivers
    -   5.4. Xorg Configuration
    -   5.5. Using Fonts in Xorg
-    Chapter 6. Wayland
    -   6.1. Wayland Synopsis
    -   6.2. The Wayfire Compositor
    -   6.3. The Hikari Compositor
    -   6.4. The Sway Compositor
    -   6.5. Using Xwayland
    -   6.6. Remote Desktop Using VNC
    -   6.7. Wayland Login Manager
    -   6.8. Useful Utilities
-    Chapter 7. Network
    -   7.1. Synopsis
    -   7.2. Setting up the Network
    -   7.3. Wired Networks
    -   7.4. Wireless Networks
    -   7.5. Hostname
    -   7.6. DNS
    -   7.7. Troubleshooting
-    Part II. Common Tasks
-    Chapter 8. Desktop Environments
    -   8.1. Synopsis
    -   8.2. Desktop Environments
    -   8.3. Browsers
    -   8.4. Development tools
    -   8.5. Desktop office productivity
    -   8.6. Document Viewers
    -   8.7. Finance
-    Chapter 9. Multimedia
    -   9.1. Synopsis
    -   9.2. Setting Up the Sound Card
    -   9.3. Audio players
    -   9.4. Video players
    -   9.5. Conferencing and Meetings
    -   9.6. Image Scanners
-    Chapter 10. Configuring the FreeBSD Kernel
    -   10.1. Synopsis
    -   10.2. Why Build a Custom Kernel?
    -   10.3. Finding the System Hardware
    -   10.4. The Configuration File
    -   10.5. Building and Installing a Custom Kernel
    -   10.6. If Something Goes Wrong
-    Chapter 11. Printing
    -   11.1. Quick Start
    -   11.2. Printer Connections
    -   11.3. Common Page Description Languages
    -   11.4. Direct Printing
    -   11.5. LPD (Line Printer Daemon)
    -   11.6. Other Printing Systems
-    Chapter 12. Linux Binary Compatibility
    -   12.1. Synopsis
    -   12.2. Configuring Linux Binary Compatibility
    -   12.3. Linux userlands
    -   12.4. Advanced Topics
-    Chapter 13. WINE
    -   13.1. Synopsis
    -   13.2. WINE Overview & Concepts
    -   13.3. Installing WINE on FreeBSD
    -   13.4. Running a First WINE Program on FreeBSD
    -   13.5. Configuring WINE Installation
    -   13.6. WINE Management GUIs
    -   13.7. WINE in Multi-User FreeBSD Installations
    -   13.8. WINE on FreeBSD FAQ
-    Part III. System Administration
-    Chapter 14. Configuration and Tuning
    -   14.1. Synopsis
    -   14.2. Starting Services
    -   14.3. Configuring cron(8)
    -   14.4. Managing Services in FreeBSD
    -   14.5. Configuring System Logging
    -   14.6. Configuration Files
    -   14.7. Tuning with sysctl(8)
    -   14.8. Tuning Disks
    -   14.9. Tuning Kernel Limits
    -   14.10. Adding Swap Space
    -   14.11. Power and Resource Management
-    Chapter 15. The FreeBSD Booting Process
    -   15.1. Synopsis
    -   15.2. FreeBSD Boot Process
    -   15.3. Device Hints
    -   15.4. Shutdown Sequence
-    Chapter 16. Security
    -   16.1. Synopsis
    -   16.2. Introduction
    -   16.3. One-time Passwords
    -   16.4. TCP Wrapper
    -   16.5. Kerberos
    -   16.6. OpenSSL
    -   16.7. VPN over IPsec
    -   16.8. OpenSSH
    -   16.9. Access Control Lists
    -   16.10. Monitoring Third Party Security Issues
    -   16.11. FreeBSD Security Advisories
    -   16.12. Process Accounting
    -   16.13. Resource Limits
    -   16.14. Shared Administration with Sudo
    -   16.15. Using doas as an alternative to sudo
-    Chapter 17. Jails
    -   17.1. Synopsis
    -   17.2. Terms Related to Jails
    -   17.3. Creating and Controlling Jails
    -   17.4. Fine Tuning and Administration
    -   17.5. Updating Multiple Jails
    -   17.6. Managing Jails with ezjail
-    Chapter 18. Mandatory Access Control
    -   18.1. Synopsis
    -   18.2. Key Terms
    -   18.3. Understanding MAC Labels
    -   18.4. Planning the Security Configuration
    -   18.5. Available MAC Policies
    -   18.6. User Lock Down
    -   18.7. Nagios in a MAC Jail
    -   18.8. Troubleshooting the MAC Framework
-    Chapter 19. Security Event Auditing
    -   19.1. Synopsis
    -   19.2. Key Terms
    -   19.3. Audit Configuration
    -   19.4. Working with Audit Trails
-    Chapter 20. Storage
    -   20.1. Synopsis
    -   20.2. Adding Disks
    -   20.3. Resizing and Growing Disks
    -   20.4. USB Storage Devices
    -   20.5. Creating and Using CD Media
    -   20.6. Creating and Using DVD Media
    -   20.7. Creating and Using Floppy Disks
    -   20.8. Using NTFS Disks
    -   20.9. Backup Basics
    -   20.10. Memory Disks
    -   20.11. File System Snapshots
    -   20.12. Disk Quotas
    -   20.13. Encrypting Disk Partitions
    -   20.14. Encrypting Swap
    -   20.15. Highly Available Storage (HAST)
-    Chapter 21. GEOM: Modular Disk Transformation Framework
    -   21.1. Synopsis
    -   21.2. RAID0 - Striping
    -   21.3. RAID1 - Mirroring
    -   21.4. RAID3 - Byte-level Striping with Dedicated Parity
    -   21.5. Software RAID Devices
    -   21.6. GEOM Gate Network
    -   21.7. Labeling Disk Devices
    -   21.8. UFS Journaling Through GEOM
-    Chapter 22. The Z File System (ZFS)
    -   22.1. What Makes ZFS Different
    -   22.2. Quick Start Guide
    -   22.3. zpool Administration
    -   22.4. zfs Administration
    -   22.5. Delegated Administration
    -   22.6. Advanced Topics
<<<<<<< HEAD
=======
    -   22.7. Further Resources
    -   22.8. ZFS Features and Terminology
-    Chapter 23. Other File Systems
    -   23.1. Synopsis
    -   23.2. Linux® File Systems
-    Chapter 24. Virtualization
    -   24.1. Synopsis
    -   24.2. FreeBSD as a Guest on Parallels Desktop for macOS®
    -   24.3. FreeBSD as a Guest on VMware Fusion for macOS®
    -   24.4. FreeBSD as a Guest on VirtualBox™
    -   24.5. FreeBSD as a Host with VirtualBox™
    -   24.6. FreeBSD as a Host with bhyve
    -   24.7. FreeBSD as a Xen™-Host
-    Chapter 25. Localization - i18n/L10n Usage and Setup
    -   25.1. Synopsis
    -   25.2. Using Localization
    -   25.3. Finding i18n Applications
    -   25.4. Locale Configuration for Specific Languages
-    Chapter 26. Updating and Upgrading FreeBSD
    -   26.1. Synopsis
    -   26.2. FreeBSD Update
    -   26.3. Updating Bootcode
    -   26.4. Updating the Documentation Set
    -   26.5. Tracking a Development Branch
    -   26.6. Updating FreeBSD from Source
    -   26.7. Tracking for Multiple Machines
-    Chapter 27. DTrace
    -   27.1. Synopsis
    -   27.2. Implementation Differences
    -   27.3. Enabling DTrace Support
    -   27.4. Using DTrace
-    Chapter 28. USB Device Mode / USB OTG
    -   28.1. Synopsis
    -   28.2. USB Virtual Serial Ports
    -   28.3. USB Device Mode Network Interfaces
    -   28.4. USB Virtual Storage Device
-    Part IV. Network Communication
-    Chapter 29. Serial Communications
    -   29.1. Synopsis
    -   29.2. Serial Terminology and Hardware
    -   29.3. Terminals
    -   29.4. Dial-in Service
    -   29.5. Dial-out Service
    -   29.6. Setting Up the Serial Console
-    Chapter 30. PPP
    -   30.1. Synopsis
    -   30.2. Configuring PPP
    -   30.3. Troubleshooting PPP Connections
    -   30.4. Using PPP over Ethernet (PPPoE)
    -   30.5. Using PPP over ATM (PPPoA)
-    Chapter 31. Electronic Mail
    -   31.1. Synopsis
    -   31.2. Mail Components
    -   31.3. Sendmail Configuration Files
    -   31.4. Changing the Mail Transfer Agent
    -   31.5. Troubleshooting
    -   31.6. Advanced Topics
    -   31.7. Setting Up to Send Only
    -   31.8. Using Mail with a Dialup Connection
    -   31.9. SMTP Authentication
    -   31.10. Mail User Agents
    -   31.11. Using fetchmail
    -   31.12. Using procmail
-    Chapter 32. Network Servers
    -   32.1. Synopsis
    -   32.2. The inetd Super-Server
    -   32.3. Network File System (NFS)
    -   32.4. Network Information System (NIS)
    -   32.5. Lightweight Directory Access Protocol (LDAP)
    -   32.6. Dynamic Host Configuration Protocol (DHCP)
    -   32.7. Domain Name System (DNS)
    -   32.8. Apache HTTP Server
    -   32.9. File Transfer Protocol (FTP)
    -   32.10. File and Print Services for Microsoft® Windows® Clients
        (Samba)
    -   32.11. Clock Synchronization with NTP
    -   32.12. iSCSI Initiator and Target Configuration
-    Chapter 33. Firewalls
    -   33.1. Synopsis
    -   33.2. Firewall Concepts
    -   33.3. PF
    -   33.4. IPFW
    -   33.5. IPFILTER (IPF)
    -   33.6. Blacklistd
-    Chapter 34. Advanced Networking
    -   34.1. Synopsis
    -   34.2. Gateways and Routes
    -   34.3. Virtual Hosts
    -   34.4. Wireless Advanced Authentication
    -   34.5. Wireless Ad-hoc Mode
    -   34.6. USB Tethering
    -   34.7. Bluetooth
    -   34.8. Bridging
    -   34.9. Link Aggregation and Failover
    -   34.10. Diskless Operation with PXE
    -   34.11. Common Address Redundancy Protocol (CARP)
    -   34.12. VLANs
-    Part V. Appendices
-    Appendix A. Obtaining FreeBSD
    -   A.1. Mirrors
    -   A.2. Using Git
    -   A.3. Using Subversion
    -   A.4. CD and DVD Sets
-    Appendix B. Bibliography
    -   B.1. FreeBSD Bibliography
    -   B.2. Security Reference
    -   B.3. UNIX® History
    -   B.4. Periodicals, Journals, and Magazines
-    Appendix C. Resources on the Internet
    -   C.1. Websites
    -   C.2. Mailing Lists
    -   C.3. Usenet Newsgroups
-    Appendix D. OpenPGP Keys
    -   D.1. Officers
-    FreeBSD Glossary
-    Colophon
-   
-   

Book menu

Chapter 5. The X Window System

Table of Contents

-   5.1. Synopsis
-   5.2. Installing Xorg
-   5.3. Graphic card drivers
-   5.4. Xorg Configuration
-   5.5. Using Fonts in Xorg

5.1. Synopsis

An installation of FreeBSD using bsdinstall does not automatically
install a graphical user interface. This chapter describes how to
install and configure Xorg, which provides the open source X Window
System used to provide a graphical environment. It then describes how to
find and install a desktop environment or window manager.

Before reading this chapter, you should:

-   Know how to install additional third-party software as described in
    Installing Applications: Packages and Ports.

After reading this chapter, you will know:

-   The various components of the X Window System, and how they
    interoperate.

-   How to install and configure Xorg.

-   How to use TrueType® fonts in Xorg.

-   How to set up your system for graphical logins (XDM).

5.2. Installing Xorg

On FreeBSD, Xorg can be installed as a package or port.

The binary meta package can be installed quickly but with fewer options
for customization:

    # pkg install xorg

Either of these installations results in the complete Xorg system being
installed.

The current user must be a member of the video group. To add a user to
video group, execute the following command:

    # pw groupmod video -m username

+-----------------------------------+-----------------------------------+
|                                   | A smaller version of the X system |
|                                   | suitable for experienced users is |
|                                   | available in x11/xorg-minimal.    |
|                                   | Most of the documents, libraries, |
|                                   | and applications will not be      |
|                                   | installed. Some applications      |
|                                   | require these additional          |
|                                   | components to function.           |
+-----------------------------------+-----------------------------------+

+-----------------------------------+-----------------------------------+
|                                   | Video cards, monitors, and input  |
|                                   | devices are automatically         |
|                                   | detected and do not require any   |
|                                   | manual configuration. Do not      |
|                                   | create xorg.conf or run a         |
|                                   | -configure step unless automatic  |
|                                   | configuration fails.              |
+-----------------------------------+-----------------------------------+

5.3. Graphic card drivers

The following table shows the different graphics cards supported by
FreeBSD, which package should be installed and its corresponding module.

+-----------------+-----------------+-----------------+-----------------+
| Brand           | Type            | Package         | Module          |
+=================+=================+=================+=================+
| Intel®          | Open Source     | drm-kmod        | i915kms         |
+-----------------+-----------------+-----------------+-----------------+
| AMD®            | Open Source     | drm-kmod        | amdgpu and      |
|                 |                 |                 | radeonkms       |
+-----------------+-----------------+-----------------+-----------------+
| NVIDIA®         | Proprietary     | nvidia-driver   | nvidia or       |
|                 |                 |                 | nvidia-modeset  |
+-----------------+-----------------+-----------------+-----------------+
| VESA            | Open Source     | xf86-video-vesa | vesa            |
+-----------------+-----------------+-----------------+-----------------+
| SCFB            | Open Source     | xf86-video-scfb | scfb            |
+-----------------+-----------------+-----------------+-----------------+
| Virtualbox      | Open Source     | virtualbo       | Virtualbox OSE  |
|                 |                 | x-ose-additions | additions       |
|                 |                 |                 | include the     |
|                 |                 |                 | vboxvideo       |
|                 |                 |                 | driver.         |
+-----------------+-----------------+-----------------+-----------------+
| VMware®         | Open Source     | xf              | vmwgfx          |
|                 |                 | 86-video-vmware |                 |
+-----------------+-----------------+-----------------+-----------------+

: Table 1. Graphic card packages

The following command can be used to identify which graphics card is
installed in the system:

    % pciconf -lv|grep -B4 VGA

The output should be similar to the following:

    vgapci0@pci0:0:2:0:     class=0x030000 rev=0x07 hdr=0x00 vendor=0x8086 device=0x2a42 subvendor=0x17aa subdevice=0x20e4
        vendor     = 'Intel Corporation'
        device     = 'Mobile 4 Series Chipset Integrated Graphics Controller'
        class      = display
        subclass   = VGA

+-----------------------------------+-----------------------------------+
|                                   | If the graphics card is not       |
|                                   | supported by Intel®, AMD® or      |
|                                   | NVIDIA® drivers, then VESA or     |
|                                   | SCFB modules should be used. VESA |
|                                   | module must be used when booting  |
|                                   | in BIOS mode and SCFB module must |
|                                   | be used when booting in UEFI      |
|                                   | mode.                             |
|                                   |                                   |
|                                   | This command can be used to check |
|                                   | the booting mode:                 |
|                                   |                                   |
|                                   |     % sysctl machdep.bootmethod   |
|                                   |                                   |
|                                   | The output should be similar to   |
|                                   | the following:                    |
|                                   |                                   |
|                                   |     machdep.bootmethod: BIOS      |
+-----------------------------------+-----------------------------------+

5.3.1. Intel®

Intel® Graphics refers to the class of graphics chips that are
integrated on the same die as an Intel® CPU. Wikipedia offers a good
overview of the variations and names used for generations of Intel HD
Graphics.

The graphics/drm-kmod package indirectly provides a range of kernel
modules for use with Intel® Graphics cards. The Intel® driver can be
installed by executing the following command:

    # pkg install drm-kmod

Then add the module to /etc/rc.conf file, executing the following
command:

    # sysrc kld_list+=i915kms

+-----------------------------------+-----------------------------------+
|                                   | If a high CPU usage is noticed or |
|                                   | excessive tearing with HD video,  |
|                                   | the installation of               |
|                                   | multimedia/libva-intel-driver may |
|                                   | help. To install the package      |
|                                   | execute the following command:    |
|                                   |                                   |
|                                   |     # pkg install libv            |
|                                   | a-intel-driver mesa-libs mesa-dri |
+-----------------------------------+-----------------------------------+

5.3.2. AMD®

The graphics/drm-kmod package indirectly provides a range of kernel
modules for use with AMD® Graphics cards. The modules amdgpu and
radeonkms can be used depending the generation of the hardware. The
FreeBSD project maintains an AMD graphics support matrix to determine
which driver must be used.

AMD® driver can be installed by executing the following command:

    # pkg install drm-kmod

For post-HD7000 or Tahiti graphic cards add the module to /etc/rc.conf
file, executing the following command:

    # sysrc kld_list+=amdgpu

For older graphic cards (pre-HD7000 or pre-Tahiti) add the module to
/etc/rc.conf file, executing the following command:

    # sysrc kld_list+=radeonkms

5.3.3. NVIDIA®

FreeBSD supports different versions of the proprietary NVIDIA® driver.
Users of newer graphics cards should install the x11/nvidia-driver
package. Those with older cards will have to check below which version
supports them.

+-----------------------------------+-----------------------------------+
| Package                           | Supported hardware                |
+===================================+===================================+
| x11/nvidia-driver-304             | supported hardware                |
+-----------------------------------+-----------------------------------+
| x11/nvidia-driver-340             | supported hardware                |
+-----------------------------------+-----------------------------------+
| x11/nvidia-driver-390             | supported hardware                |
+-----------------------------------+-----------------------------------+
| x11/nvidia-driver-470             | supported hardware                |
+-----------------------------------+-----------------------------------+
| x11/nvidia-driver                 | supported hardware                |
+-----------------------------------+-----------------------------------+

: Table 2. Supported versions of NVIDIA® drivers

+-----------------------------------+-----------------------------------+
|                                   | Version 304 of the NVIDIA®        |
|                                   | graphics driver                   |
|                                   | (nvidia-driver-304) does not      |
|                                   | support xorg-server 1.20 or       |
|                                   | later.                            |
+-----------------------------------+-----------------------------------+

The latest NVIDIA® driver can be installed by running the following
command:

    # pkg install nvidia-driver

Then add the module to /etc/rc.conf file, executing the following
command:

    # sysrc kld_list+=nvidia-modeset

+-----------------------------------+-----------------------------------+
|                                   | The nvidia driver must be used if |
|                                   | the packages                      |
|                                   | x11/nvidia-driver-304 or          |
|                                   | x11/nvidia-driver-340 have been   |
|                                   | installed.                        |
|                                   |                                   |
|                                   |     # sysrc kld_list+=nvidia      |
+-----------------------------------+-----------------------------------+

5.4. Xorg Configuration

Xorg supports most common video cards, keyboards, and pointing devices.

+-----------------------------------+-----------------------------------+
|                                   | Video cards, monitors, and input  |
|                                   | devices are automatically         |
|                                   | detected and do not require any   |
|                                   | manual configuration. Do not      |
|                                   | create xorg.conf or run a         |
|                                   | Xorg -configure step unless       |
|                                   | automatic configuration fails.    |
+-----------------------------------+-----------------------------------+

5.4.1. Configuration Files

Xorg looks in several directories for configuration files.
/usr/local/etc/X11/ is the recommended directory for these files on
FreeBSD. Using this directory helps keep application files separate from
operating system files.

5.4.2. Single or Multiple Files

It is easier to use multiple files that each configure a specific
setting than the traditional single xorg.conf. These files are stored in
the /usr/local/etc/X11/xorg.conf.d/ subdirectory.

+-----------------------------------+-----------------------------------+
|                                   | The traditional single xorg.conf  |
|                                   | still works, but is neither as    |
|                                   | clear nor as flexible as multiple |
|                                   | files in the                      |
|                                   | /usr/local/etc/X11/xorg.conf.d/   |
|                                   | subdirectory.                     |
+-----------------------------------+-----------------------------------+

5.4.3. Video Cards

The driver for the graphics card can be specified in the
/usr/local/etc/X11/xorg.conf.d/ directory.

To configure the Intel® driver in a configuration file:

Example 1. Select Intel® Video Driver in a File

/usr/local/etc/X11/xorg.conf.d/20-intel.conf

    Section "Device"
        Identifier "Card0"
        Driver     "intel"
    EndSection

To configure the AMD® driver in a configuration file:

Example 2. Select AMD® Video Driver in a File

/usr/local/etc/X11/xorg.conf.d/20-radeon.conf

    Section "Device"
        Identifier "Card0"
        Driver     "radeon"
    EndSection

To configure the NVIDIA® driver in a configuration file:

Example 3. Select NVIDIA® Video Driver in a File

/usr/local/etc/X11/xorg.conf.d/20-nvidia.conf

    Section "Device"
        Identifier "Card0"
        Driver     "nvidia"
    EndSection

To configure the VESA driver in a configuration file:

Example 4. Select VESA Video Driver in a File

/usr/local/etc/X11/xorg.conf.d/20-vesa.conf

    Section "Device"
        Identifier "Card0"
        Driver     "vesa"
    EndSection

To configure the SCFB driver in a configuration file:

Example 5. Select SCFB Video Driver in a File

/usr/local/etc/X11/xorg.conf.d/20-scfb.conf

    Section "Device"
        Identifier "Card0"
        Driver     "scfb"
    EndSection

To configure multiple video cards, the BusID can be added. A list of
video card bus IDs can be displayed by executing:

    % pciconf -lv | grep -B3 display

The output should be similar to the following:

    vgapci0@pci0:0:2:0:     class=0x030000 rev=0x07 hdr=0x00 vendor=0x8086 device=0x2a42 subvendor=0x17aa subdevice=0x20e4
        vendor     = 'Intel Corporation'
        device     = 'Mobile 4 Series Chipset Integrated Graphics Controller'
        class      = display
    --
    vgapci1@pci0:0:2:1:     class=0x038000 rev=0x07 hdr=0x00 vendor=0x8086 device=0x2a43 subvendor=0x17aa subdevice=0x20e4
        vendor     = 'Intel Corporation'
        device     = 'Mobile 4 Series Chipset Integrated Graphics Controller'
        class      = display

Example 6. Select Intel® Video Driver and NVIDIA® Video Driver in a File

/usr/local/etc/X11/xorg.conf.d/20-drivers.conf

    Section "Device"
        Identifier "Card0"
        Driver     "intel"
        BusID     "pci0:0:2:0"
    EndSection

    Section "Device"
        Identifier "Card0"
        Driver     "nvidia"
        BusID     "pci0:0:2:1"
    EndSection

5.4.4. Monitors

Almost all monitors support the Extended Display Identification Data
standard (EDID). Xorg uses EDID to communicate with the monitor and
detect the supported resolutions and refresh rates. Then it selects the
most appropriate combination of settings to use with that monitor.

Other resolutions supported by the monitor can be chosen by setting the
desired resolution in configuration files, or after the X server has
been started with xrandr(1).

5.4.4.1. Using RandR (Resize and Rotate)

Run xrandr(1) without any parameters to see a list of video outputs and
detected monitor modes:

    % xrandr

The output should be similar to the following:

    Screen 0: minimum 320 x 200, current 2560 x 960, maximum 8192 x 8192
    LVDS-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 261mm x 163mm
       1280x800      59.99*+  59.81    59.91    50.00
       1280x720      59.86    59.74
       1024x768      60.00
       1024x576      59.90    59.82
       960x540       59.63    59.82
       800x600       60.32    56.25
       864x486       59.92    59.57
       640x480       59.94
       720x405       59.51    58.99
       640x360       59.84    59.32
    VGA-1 connected primary 1280x960+1280+0 (normal left inverted right x axis y axis) 410mm x 257mm
       1280x1024     75.02    60.02
       1440x900      74.98    60.07
       1280x960      60.00*
       1280x800      74.93    59.81
       1152x864      75.00
       1024x768      75.03    70.07    60.00
       832x624       74.55
       800x600       72.19    75.00    60.32    56.25
       640x480       75.00    72.81    66.67    59.94
       720x400       70.08
    HDMI-1 disconnected (normal left inverted right x axis y axis)
    DP-1 disconnected (normal left inverted right x axis y axis)
    HDMI-2 disconnected (normal left inverted right x axis y axis)
    DP-2 disconnected (normal left inverted right x axis y axis)
    DP-3 disconnected (normal left inverted right x axis y axis)

This shows that the VGA-1 output is being used to display a screen
resolution of 1280x960 pixels at a refresh rate of about 60 Hz. The
LVDS-1 is being used as a secondary monitor to display a screen
resolution of 1280x800 pixels at a refresh rate of about 60 Hz. Monitors
are not attached to the HDMI-1, HDMI-2, DP-1, DP-2 and DP-3 connectors.

Any of the other display modes can be selected with xrandr(1). For
example, to switch to 1280x1024 at 60 Hz:

    % xrandr --output LVDS-1 --mode 1280x720 --rate 60

5.4.4.2. Using the Xorg configuration file

The monitor configuration can also be set in a configuration file.

To set a screen resolution of 1024x768 in a configuration file:

Example 7. Set Screen Resolution in a File

/usr/local/etc/X11/xorg.conf.d/10-monitor.conf

    Section "Screen"
        Identifier "Screen0"
        Device     "Card0"
        SubSection "Display"
        Modes      "1024x768"
        EndSubSection
    EndSection

5.4.5. Input Devices

Xorg supports the vast majority of input devices via x11/libinput.

+-----------------------------------+-----------------------------------+
|                                   | Some desktop environments (such   |
|                                   | as KDE Plasma) provide a          |
|                                   | graphical UI for setting these    |
|                                   | parameters. Check if this is the  |
|                                   | case before resorting to manual   |
|                                   | configuration editing.            |
+-----------------------------------+-----------------------------------+

For example, to configure the keyboard layout:

Example 8. Setting a Keyboard Layout

/usr/local/etc/X11/xorg.conf.d/00-keyboard.conf

    Section "InputClass"
            Identifier "Keyboard1"
            MatchIsKeyboard "on"
            Option "XkbLayout" "es, fr"
            Option "XkbModel" "pc104"
            Option "XkbVariant" ",qwerty"
            Option "XkbOptions" "grp:win_space_toggle"
    EndSection

5.5. Using Fonts in Xorg

The default fonts that ship with Xorg are less than ideal for typical
desktop publishing applications. Large presentation fonts show up jagged
and unprofessional looking, and small fonts are almost completely
unintelligible. However, there are several free, high quality Type1
(PostScript®) fonts available which can be readily used with Xorg.

5.5.1. Type1 Fonts

The URW font collection (x11-fonts/urwfonts) includes high quality
versions of standard type1 fonts (Times Roman™, Helvetica™, Palatino™
and others). The Freefonts collection (x11-fonts/freefonts) includes
many more fonts, but most of them are intended for use in graphics
software such as the Gimp, and are not complete enough to serve as
screen fonts. In addition, Xorg can be configured to use TrueType® fonts
with a minimum of effort. For more details on this, see the X(7) manual
page or TrueType® Fonts.

To install the above Type1 font collections from binary packages, run
the following commands:

    # pkg install urwfonts

And likewise with the freefont or other collections. To have the X
server detect these fonts, add an appropriate line to the X server
configuration file (/usr/local/etc/X11/xorg.conf.d/90-fonts.conf), which
reads:

    Section "Files"
      FontPath "/usr/local/share/fonts/urwfonts/"
    EndSection

Alternatively, at the command line in the X session run:

    % xset fp+ /usr/local/share/fonts/urwfonts
    % xset fp rehash

This will work but will be lost when the X session is closed, unless it
is added to the startup file (~/.xinitrc for a normal startx session, or
~/.xsession when logging in through a graphical login manager like XDM).
A third way is to use the new /usr/local/etc/fonts/local.conf as
demonstrated in Anti-Aliased Fonts.

5.5.2. TrueType® Fonts

Xorg has built in support for rendering TrueType® fonts. There are two
different modules that can enable this functionality. The freetype
module is used in this example because it is more consistent with the
other font rendering back-ends. To enable the freetype module just add
the following line to the "Module" section of
/usr/local/etc/X11/xorg.conf.d/90-fonts.conf.

    Load  "freetype"

Now make a directory for the TrueType® fonts (for example,
/usr/local/share/fonts/TrueType) and copy all of the TrueType® fonts
into this directory. Keep in mind that TrueType® fonts cannot be
directly taken from an Apple® Mac®; they must be in
UNIX®/MS-DOS®/Windows® format for use by Xorg. Once the files have been
copied into this directory, use mkfontscale to create a fonts.dir, so
that the X font renderer knows that these new files have been installed.
mkfontscale can be installed as a package:

    # pkg install mkfontscale

Then create an index of X font files in a directory:

    # cd /usr/local/share/fonts/TrueType
    # mkfontscale

Now add the TrueType® directory to the font path. This is just the same
as described in Type1 Fonts:

    % xset fp+ /usr/local/share/fonts/TrueType
    % xset fp rehash

or add a FontPath line to xorg.conf.

Now Gimp, LibreOffice, and all of the other X applications should now
recognize the installed TrueType® fonts. Extremely small fonts (as with
text in a high resolution display on a web page) and extremely large
fonts (within LibreOffice) will look much better now.

5.5.3. Anti-Aliased Fonts

All fonts in Xorg that are found in /usr/local/share/fonts/ and
~/.fonts/ are automatically made available for anti-aliasing to
Xft-aware applications. Most recent applications are Xft-aware,
including KDE, GNOME, and Firefox.

To control which fonts are anti-aliased, or to configure anti-aliasing
properties, create (or edit, if it already exists) the file
/usr/local/etc/fonts/local.conf. Several advanced features of the Xft
font system can be tuned using this file; this section describes only
some simple possibilities. For more details, please see fonts-conf(5).

This file must be in XML format. Pay careful attention to case, and make
sure all tags are properly closed. The file begins with the usual XML
header followed by a DOCTYPE definition, and then the <fontconfig> tag:

    <?xml version="1.0"?>
          <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
          <fontconfig>

As previously stated, all fonts in /usr/local/share/fonts/ as well as
~/.fonts/ are already made available to Xft-aware applications. To add
another directory outside of these two directory trees, add a line like
this to /usr/local/etc/fonts/local.conf:

    <dir>/path/to/my/fonts</dir>

After adding new fonts, and especially new font directories, rebuild the
font caches:

    # fc-cache -f

Anti-aliasing makes borders slightly fuzzy, which makes very small text
more readable and removes "staircases" from large text, but can cause
eyestrain if applied to normal text. To exclude font sizes smaller than
14 point from anti-aliasing, include these lines:

     <match target="font">
            <test name="size" compare="less">
            <double>14</double>
            </test>
            <edit name="antialias" mode="assign">
            <bool>false</bool>
            </edit>
        </match>
        <match target="font">
            <test name="pixelsize" compare="less" qual="any">
            <double>14</double>
            </test>
            <edit mode="assign" name="antialias">
            <bool>false</bool>
            </edit>
        </match>

Spacing for some monospaced fonts might also be inappropriate with
anti-aliasing. This seems to be an issue with KDE, in particular. One
possible fix is to force the spacing for such fonts to be 100. Add these
lines:

     <match target="pattern" name="family">
           <test qual="any" name="family">
               <string>fixed</string>
           </test>
           <edit name="family" mode="assign">
               <string>mono</string>
           </edit>
        </match>
        <match target="pattern" name="family">
            <test qual="any" name="family">
            <string>console</string>
            </test>
            <edit name="family" mode="assign">
            <string>mono</string>
            </edit>
        </match>

(this aliases the other common names for fixed fonts as "mono"), and
then add:

      <match target="pattern" name="family">
             <test qual="any" name="family">
             <string>mono</string>
             </test>
             <edit name="spacing" mode="assign">
             <int>100</int>
             </edit>
         </match>

Certain fonts, such as Helvetica, may have a problem when anti-aliased.
Usually this manifests itself as a font that seems cut in half
vertically. At worst, it may cause applications to crash. To avoid this,
consider adding the following to local.conf:

      <match target="pattern" name="family">
             <test qual="any" name="family">
             <string>Helvetica</string>
             </test>
             <edit name="family" mode="assign">
             <string>sans-serif</string>
             </edit>
         </match>

After editing local.conf, make certain to end the file with the
</fontconfig> tag. Not doing this will cause changes to be ignored.

Users can add personalized settings by creating their own
~/.config/fontconfig/fonts.conf. This file uses the same XML format
described above.

One last point: with an LCD screen, sub-pixel sampling may be desired.
This basically treats the (horizontally separated) red, green and blue
components separately to improve the horizontal resolution; the results
can be dramatic. To enable this, add the line somewhere in local.conf:

         <match target="font">
             <test qual="all" name="rgba">
             <const>unknown</const>
             </test>
             <edit name="rgba" mode="assign">
             <const>rgb</const>
             </edit>
         </match>

+-----------------------------------+-----------------------------------+
|                                   | Depending on the sort of display, |
|                                   | rgb may need to be changed to     |
|                                   | bgr, vrgb or vbgr: experiment and |
|                                   | see which works best.             |
+-----------------------------------+-----------------------------------+

For more information about how to install and configure fonts on
FreeBSD, please read the article Fonts and FreeBSD.

------------------------------------------------------------------------

Last modified on: April 22, 2023 by Graham Perrin

Prev

Home

Next

Table of Contents

-   5.1. Synopsis
-   5.2. Installing Xorg
-   5.3. Graphic card drivers
-   5.4. Xorg Configuration
-   5.5. Using Fonts in Xorg

------------------------------------------------------------------------

Resources

-   Download PDF
-   Edit this page
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)

