
-    Preface
    -   Intended Audience
    -   Fourth Edition
    -   Third Edition
    -   Second Edition (2004)
    -   First Edition (2001)
    -   Organization of This Book
    -   Conventions used in this book
    -   Acknowledgments
-    Part I. Getting Started
-    Chapter 1. Introduction
    -   1.1. Synopsis
    -   1.2. Welcome to FreeBSD!
    -   1.3. About the FreeBSD Project
-    Chapter 2. Installing FreeBSD
    -   2.1. Synopsis
    -   2.2. Minimum Hardware Requirements
    -   2.3. Pre-Installation Tasks
    -   2.4. Starting the Installation
    -   2.5. Using bsdinstall
    -   2.6. Allocating Disk Space
    -   2.7. Fetching Distribution Files
    -   2.8. Network Interfaces, Accounts, Time Zone, Services and
        Hardening
    -   2.9. Troubleshooting
    -   2.10. Using the Live CD
-    Chapter 3. FreeBSD Basics
    -   3.1. Synopsis
    -   3.2. Virtual Consoles and Terminals
    -   3.3. Users and Basic Account Management
    -   3.4. Permissions
    -   3.5. Directory Structure
    -   3.6. Disk Organization
    -   3.7. Mounting and Unmounting File Systems
    -   3.8. Processes and Daemons
    -   3.9. Shells
    -   3.10. Text Editors
    -   3.11. Devices and Device Nodes
    -   3.12. Manual Pages
-    Chapter 4. Installing Applications: Packages and Ports
    -   4.1. Synopsis
    -   4.2. Overview of Software Installation
    -   4.3. Finding Software
    -   4.4. Using pkg for Binary Package Management
    -   4.5. Using the Ports Collection
    -   4.6. Building Packages with Poudriere
    -   4.7. Post-Installation Considerations
    -   4.8. Dealing with Broken Ports
-    Chapter 5. The X Window System
    -   5.1. Synopsis
    -   5.2. Installing Xorg
    -   5.3. Graphic card drivers
    -   5.4. Xorg Configuration
    -   5.5. Using Fonts in Xorg
-    Chapter 6. Wayland
    -   6.1. Wayland Synopsis
    -   6.2. The Wayfire Compositor
    -   6.3. The Hikari Compositor
    -   6.4. The Sway Compositor
    -   6.5. Using Xwayland
    -   6.6. Remote Desktop Using VNC
    -   6.7. Wayland Login Manager
    -   6.8. Useful Utilities
-    Chapter 7. Network
    -   7.1. Synopsis
    -   7.2. Setting up the Network
    -   7.3. Wired Networks
    -   7.4. Wireless Networks
    -   7.5. Hostname
    -   7.6. DNS
    -   7.7. Troubleshooting
-    Part II. Common Tasks
-    Chapter 8. Desktop Environments
    -   8.1. Synopsis
    -   8.2. Desktop Environments
    -   8.3. Browsers
    -   8.4. Development tools
    -   8.5. Desktop office productivity
    -   8.6. Document Viewers
    -   8.7. Finance
-    Chapter 9. Multimedia
    -   9.1. Synopsis
    -   9.2. Setting Up the Sound Card
    -   9.3. Audio players
    -   9.4. Video players
    -   9.5. Conferencing and Meetings
    -   9.6. Image Scanners
-    Chapter 10. Configuring the FreeBSD Kernel
    -   10.1. Synopsis
    -   10.2. Why Build a Custom Kernel?
    -   10.3. Finding the System Hardware
    -   10.4. The Configuration File
    -   10.5. Building and Installing a Custom Kernel
    -   10.6. If Something Goes Wrong
-    Chapter 11. Printing
    -   11.1. Quick Start
    -   11.2. Printer Connections
    -   11.3. Common Page Description Languages
    -   11.4. Direct Printing
    -   11.5. LPD (Line Printer Daemon)
    -   11.6. Other Printing Systems
-    Chapter 12. Linux Binary Compatibility
    -   12.1. Synopsis
    -   12.2. Configuring Linux Binary Compatibility
    -   12.3. Linux userlands
    -   12.4. Advanced Topics
-    Chapter 13. WINE
    -   13.1. Synopsis
    -   13.2. WINE Overview & Concepts
    -   13.3. Installing WINE on FreeBSD
    -   13.4. Running a First WINE Program on FreeBSD
    -   13.5. Configuring WINE Installation
    -   13.6. WINE Management GUIs
    -   13.7. WINE in Multi-User FreeBSD Installations
    -   13.8. WINE on FreeBSD FAQ
-    Part III. System Administration
-    Chapter 14. Configuration and Tuning
    -   14.1. Synopsis
    -   14.2. Starting Services
    -   14.3. Configuring cron(8)
    -   14.4. Managing Services in FreeBSD
    -   14.5. Configuring System Logging
    -   14.6. Configuration Files
    -   14.7. Tuning with sysctl(8)
    -   14.8. Tuning Disks
    -   14.9. Tuning Kernel Limits
    -   14.10. Adding Swap Space
    -   14.11. Power and Resource Management
-    Chapter 15. The FreeBSD Booting Process
    -   15.1. Synopsis
    -   15.2. FreeBSD Boot Process
    -   15.3. Device Hints
    -   15.4. Shutdown Sequence
-    Chapter 16. Security
    -   16.1. Synopsis
    -   16.2. Introduction
    -   16.3. One-time Passwords
    -   16.4. TCP Wrapper
    -   16.5. Kerberos
    -   16.6. OpenSSL
    -   16.7. VPN over IPsec
    -   16.8. OpenSSH
    -   16.9. Access Control Lists
    -   16.10. Monitoring Third Party Security Issues
    -   16.11. FreeBSD Security Advisories
    -   16.12. Process Accounting
    -   16.13. Resource Limits
    -   16.14. Shared Administration with Sudo
    -   16.15. Using doas as an alternative to sudo
-    Chapter 17. Jails
    -   17.1. Synopsis
    -   17.2. Terms Related to Jails
    -   17.3. Creating and Controlling Jails
    -   17.4. Fine Tuning and Administration
    -   17.5. Updating Multiple Jails
    -   17.6. Managing Jails with ezjail
-    Chapter 18. Mandatory Access Control
    -   18.1. Synopsis
    -   18.2. Key Terms
    -   18.3. Understanding MAC Labels
    -   18.4. Planning the Security Configuration
    -   18.5. Available MAC Policies
    -   18.6. User Lock Down
    -   18.7. Nagios in a MAC Jail
    -   18.8. Troubleshooting the MAC Framework
-    Chapter 19. Security Event Auditing
    -   19.1. Synopsis
    -   19.2. Key Terms
    -   19.3. Audit Configuration
    -   19.4. Working with Audit Trails
-    Chapter 20. Storage
    -   20.1. Synopsis
    -   20.2. Adding Disks
    -   20.3. Resizing and Growing Disks
    -   20.4. USB Storage Devices
    -   20.5. Creating and Using CD Media
    -   20.6. Creating and Using DVD Media
    -   20.7. Creating and Using Floppy Disks
    -   20.8. Using NTFS Disks
    -   20.9. Backup Basics
    -   20.10. Memory Disks
    -   20.11. File System Snapshots
    -   20.12. Disk Quotas
    -   20.13. Encrypting Disk Partitions
    -   20.14. Encrypting Swap
    -   20.15. Highly Available Storage (HAST)
-    Chapter 21. GEOM: Modular Disk Transformation Framework
    -   21.1. Synopsis
    -   21.2. RAID0 - Striping
    -   21.3. RAID1 - Mirroring
    -   21.4. RAID3 - Byte-level Striping with Dedicated Parity
    -   21.5. Software RAID Devices
    -   21.6. GEOM Gate Network
    -   21.7. Labeling Disk Devices
    -   21.8. UFS Journaling Through GEOM
-    Chapter 22. The Z File System (ZFS)
    -   22.1. What Makes ZFS Different
    -   22.2. Quick Start Guide
    -   22.3. zpool Administration
    -   22.4. zfs Administration
    -   22.5. Delegated Administration
    -   22.6. Advanced Topics
<<<<<<< HEAD
=======
    -   22.7. Further Resources
    -   22.8. ZFS Features and Terminology
-    Chapter 23. Other File Systems
    -   23.1. Synopsis
    -   23.2. Linux® File Systems
-    Chapter 24. Virtualization
    -   24.1. Synopsis
    -   24.2. FreeBSD as a Guest on Parallels Desktop for macOS®
    -   24.3. FreeBSD as a Guest on VMware Fusion for macOS®
    -   24.4. FreeBSD as a Guest on VirtualBox™
    -   24.5. FreeBSD as a Host with VirtualBox™
    -   24.6. FreeBSD as a Host with bhyve
    -   24.7. FreeBSD as a Xen™-Host
-    Chapter 25. Localization - i18n/L10n Usage and Setup
    -   25.1. Synopsis
    -   25.2. Using Localization
    -   25.3. Finding i18n Applications
    -   25.4. Locale Configuration for Specific Languages
-    Chapter 26. Updating and Upgrading FreeBSD
    -   26.1. Synopsis
    -   26.2. FreeBSD Update
    -   26.3. Updating Bootcode
    -   26.4. Updating the Documentation Set
    -   26.5. Tracking a Development Branch
    -   26.6. Updating FreeBSD from Source
    -   26.7. Tracking for Multiple Machines
-    Chapter 27. DTrace
    -   27.1. Synopsis
    -   27.2. Implementation Differences
    -   27.3. Enabling DTrace Support
    -   27.4. Using DTrace
-    Chapter 28. USB Device Mode / USB OTG
    -   28.1. Synopsis
    -   28.2. USB Virtual Serial Ports
    -   28.3. USB Device Mode Network Interfaces
    -   28.4. USB Virtual Storage Device
-    Part IV. Network Communication
-    Chapter 29. Serial Communications
    -   29.1. Synopsis
    -   29.2. Serial Terminology and Hardware
    -   29.3. Terminals
    -   29.4. Dial-in Service
    -   29.5. Dial-out Service
    -   29.6. Setting Up the Serial Console
-    Chapter 30. PPP
    -   30.1. Synopsis
    -   30.2. Configuring PPP
    -   30.3. Troubleshooting PPP Connections
    -   30.4. Using PPP over Ethernet (PPPoE)
    -   30.5. Using PPP over ATM (PPPoA)
-    Chapter 31. Electronic Mail
    -   31.1. Synopsis
    -   31.2. Mail Components
    -   31.3. Sendmail Configuration Files
    -   31.4. Changing the Mail Transfer Agent
    -   31.5. Troubleshooting
    -   31.6. Advanced Topics
    -   31.7. Setting Up to Send Only
    -   31.8. Using Mail with a Dialup Connection
    -   31.9. SMTP Authentication
    -   31.10. Mail User Agents
    -   31.11. Using fetchmail
    -   31.12. Using procmail
-    Chapter 32. Network Servers
    -   32.1. Synopsis
    -   32.2. The inetd Super-Server
    -   32.3. Network File System (NFS)
    -   32.4. Network Information System (NIS)
    -   32.5. Lightweight Directory Access Protocol (LDAP)
    -   32.6. Dynamic Host Configuration Protocol (DHCP)
    -   32.7. Domain Name System (DNS)
    -   32.8. Apache HTTP Server
    -   32.9. File Transfer Protocol (FTP)
    -   32.10. File and Print Services for Microsoft® Windows® Clients
        (Samba)
    -   32.11. Clock Synchronization with NTP
    -   32.12. iSCSI Initiator and Target Configuration
-    Chapter 33. Firewalls
    -   33.1. Synopsis
    -   33.2. Firewall Concepts
    -   33.3. PF
    -   33.4. IPFW
    -   33.5. IPFILTER (IPF)
    -   33.6. Blacklistd
-    Chapter 34. Advanced Networking
    -   34.1. Synopsis
    -   34.2. Gateways and Routes
    -   34.3. Virtual Hosts
    -   34.4. Wireless Advanced Authentication
    -   34.5. Wireless Ad-hoc Mode
    -   34.6. USB Tethering
    -   34.7. Bluetooth
    -   34.8. Bridging
    -   34.9. Link Aggregation and Failover
    -   34.10. Diskless Operation with PXE
    -   34.11. Common Address Redundancy Protocol (CARP)
    -   34.12. VLANs
-    Part V. Appendices
-    Appendix A. Obtaining FreeBSD
    -   A.1. Mirrors
    -   A.2. Using Git
    -   A.3. Using Subversion
    -   A.4. CD and DVD Sets
-    Appendix B. Bibliography
    -   B.1. FreeBSD Bibliography
    -   B.2. Security Reference
    -   B.3. UNIX® History
    -   B.4. Periodicals, Journals, and Magazines
-    Appendix C. Resources on the Internet
    -   C.1. Websites
    -   C.2. Mailing Lists
    -   C.3. Usenet Newsgroups
-    Appendix D. OpenPGP Keys
    -   D.1. Officers
-    FreeBSD Glossary
-    Colophon
-   
-   

Book menu

FreeBSD Glossary

Table of Contents

This glossary contains terms and acronyms used within the FreeBSD
community and documentation.

A

ACL

    See Access Control List.

ACPI

    See Advanced Configuration and Power Interface.

AMD

    See Automatic Mount Daemon.

AML

    See ACPI Machine Language.

API

    See Application Programming Interface.

APIC

    See Advanced Programmable Interrupt Controller.

APM

    See Advanced Power Management.

APOP

    See Authenticated Post Office Protocol.

ASL

    See ACPI Source Language.

ATA

    See Advanced Technology Attachment.

ATM

    See Asynchronous Transfer Mode.

ACPI Machine Language

    Pseudocode, interpreted by a virtual machine within an
    ACPI-compliant operating system, providing a layer between the
    underlying hardware and the documented interface presented to the
    OS.

ACPI Source Language

    The programming language AML is written in.

Access Control List

    A list of permissions attached to an object, usually either a file
    or a network device.

Advanced Configuration and Power Interface

    A specification which provides an abstraction of the interface the
    hardware presents to the operating system, so that the operating
    system should need to know nothing about the underlying hardware to
    make the most of it. ACPI evolves and supersedes the functionality
    provided previously by APM, PNPBIOS and other technologies, and
    provides facilities for controlling power consumption, machine
    suspension, device enabling and disabling, etc.

Application Programming Interface

    A set of procedures, protocols and tools that specify the canonical
    interaction of one or more program parts; how, when and why they do
    work together, and what data they share or operate on.

Advanced Power Management

    An API enabling the operating system to work in conjunction with the
    BIOS in order to achieve power management. APM has been superseded
    by the much more generic and powerful ACPI specification for most
    applications.

Advanced Programmable Interrupt Controller

    

Advanced Technology Attachment

    

Asynchronous Transfer Mode

    

Authenticated Post Office Protocol

    

Automatic Mount Daemon

    A daemon that automatically mounts a filesystem when a file or
    directory within that filesystem is accessed.

B

BAR

    See Base Address Register.

BIND

    See Berkeley Internet Name Domain.

BIOS

    See Basic Input/Output System.

BSD

    See Berkeley Software Distribution.

Base Address Register

    The registers that determine which address range a PCI device will
    respond to.

Basic Input/Output System

    The definition of BIOS depends a bit on the context. Some people
    refer to it as the ROM chip with a basic set of routines to provide
    an interface between software and hardware. Others refer to it as
    the set of routines contained in the chip that help in bootstrapping
    the system. Some might also refer to it as the screen used to
    configure the bootstrapping process. The BIOS is PC-specific but
    other systems have something similar.

Berkeley Internet Name Domain

    An implementation of the DNS protocols.

Berkeley Software Distribution

    This is the name that the Computer Systems Research Group (CSRG) at
    The University of California at Berkeley gave to their improvements
    and modifications to AT&T’s 32V UNIX®. FreeBSD is a descendant of
    the CSRG work.

Bikeshed Building

    A phenomenon whereby many people will give an opinion on an
    uncomplicated topic, whilst a complex topic receives little or no
    discussion. See the FAQ for the origin of the term.

C

CD

    See Carrier Detect.

CHAP

    See Challenge Handshake Authentication Protocol.

CLIP

    See Classical IP over ATM.

COFF

    See Common Object File Format.

CPU

    See Central Processing Unit.

CTS

    See Clear To Send.

Carrier Detect

    An RS232C signal indicating that a carrier has been detected.

Central Processing Unit

    Also known as the processor. This is the brain of the computer where
    all calculations take place. There are a number of different
    architectures with different instruction sets. Among the more
    well-known are the Intel-x86 and derivatives, Arm, and PowerPC.

Challenge Handshake Authentication Protocol

    A method of authenticating a user, based on a secret shared between
    client and server.

Classical IP over ATM

    

Clear To Send

    An RS232C signal giving the remote system permission to send data.

    See Also Request To Send.

Common Object File Format

    

D

DAC

    See Discretionary Access Control.

DDB

    See Debugger.

DES

    See Data Encryption Standard.

DHCP

    See Dynamic Host Configuration Protocol.

DNS

    See Domain Name System.

DSDT

    See Differentiated System Description Table.

DSR

    See Data Set Ready.

DTR

    See Data Terminal Ready.

DVMRP

    See Distance-Vector Multicast Routing Protocol.

Discretionary Access Control

    

Data Encryption Standard

    A method of encrypting information, traditionally used as the method
    of encryption for UNIX® passwords and the crypt(3) function.

Data Set Ready

    An RS232C signal sent from the modem to the computer or terminal
    indicating a readiness to send and receive data.

    See Also Data Terminal Ready.

Data Terminal Ready

    An RS232C signal sent from the computer or terminal to the modem
    indicating a readiness to send and receive data.

Debugger

    An interactive in-kernel facility for examining the status of a
    system, often used after a system has crashed to establish the
    events surrounding the failure.

Differentiated System Description Table

    An ACPI table, supplying basic configuration information about the
    base system.

Distance-Vector Multicast Routing Protocol

    

Domain Name System

    The system that converts humanly readable hostnames (i.e.,
    mail.example.net) to Internet addresses and vice versa.

Dynamic Host Configuration Protocol

    A protocol that dynamically assigns IP addresses to a computer
    (host) when it requests one from the server. The address assignment
    is called a “lease”.

E

ECOFF

    See Extended COFF.

ELF

    See Executable and Linking Format.

ESP

    See Encapsulated Security Payload.

Encapsulated Security Payload

    

Executable and Linking Format

    

Extended COFF

    

F

FADT

    See Fixed ACPI Description Table.

FAT

    See File Allocation Table.

FAT16

    See File Allocation Table (16-bit).

FTP

    See File Transfer Protocol.

File Allocation Table

    

File Allocation Table (16-bit)

    

File Transfer Protocol

    A member of the family of high-level protocols implemented on top of
    TCP which can be used to transfer files over a TCP/IP network.

Fixed ACPI Description Table

    

G

GUI

    See Graphical User Interface.

Giant

    The name of a mutual exclusion mechanism (a sleep mutex) that
    protects a large set of kernel resources. Although a simple locking
    mechanism was adequate in the days where a machine might have only a
    few dozen processes, one networking card, and certainly only one
    processor, in current times it is an unacceptable performance
    bottleneck. FreeBSD developers are actively working to replace it
    with locks that protect individual resources, which will allow a
    much greater degree of parallelism for both single-processor and
    multi-processor machines.

Graphical User Interface

    A system where the user and computer interact with graphics.

H

HTML

    See HyperText Markup Language.

HUP

    See HangUp.

HangUp

    

HyperText Markup Language

    The markup language used to create web pages.

I

I/O

    See Input/Output.

IASL

    See Intel’s ASL compiler.

IMAP

    See Internet Message Access Protocol.

IP

    See Internet Protocol.

IPFW

    See IP Firewall.

IPP

    See Internet Printing Protocol.

IPv4

    See IP Version 4.

IPv6

    See IP Version 6.

ISP

    See Internet Service Provider.

IP Firewall

    

IP Version 4

    The IP protocol version 4, which uses 32 bits for addressing. This
    version is still the most widely used, but it is slowly being
    replaced with IPv6.

    See Also IP Version 6.

IP Version 6

    The new IP protocol. Invented because the address space in IPv4 is
    running out. Uses 128 bits for addressing.

Input/Output

    

Intel’s ASL compiler

    Intel’s compiler for converting ASL into AML.

Internet Message Access Protocol

    A protocol for accessing email messages on a mail server,
    characterised by the messages usually being kept on the server as
    opposed to being downloaded to the mail reader client.

    See Also Post Office Protocol Version 3.

Internet Printing Protocol

    

Internet Protocol

    The packet transmitting protocol that is the basic protocol on the
    Internet. Originally developed at the U.S. Department of Defense and
    an extremely important part of the TCP/IP stack. Without the
    Internet Protocol, the Internet would not have become what it is
    today. For more information, see RFC 791.

Internet Service Provider

    A company that provides access to the Internet.

K

KAME

    Japanese for “turtle”, the term KAME is used in computing circles to
    refer to the KAME Project, who work on an implementation of IPv6.

KDC

    See Key Distribution Center.

KLD

    See Kernel ld(1).

KSE

    See Kernel Scheduler Entities.

KVA

    See Kernel Virtual Address.

Kbps

    See Kilo Bits Per Second.

Kernel ld(1)

    A method of dynamically loading functionality into a FreeBSD kernel
    without rebooting the system.

Kernel Scheduler Entities

    A kernel-supported threading system. See the project home page for
    further details.

Kernel Virtual Address

    

Key Distribution Center

    

Kilo Bits Per Second

    Used to measure bandwidth (how much data can pass a given point at a
    specified amount of time). Alternates to the Kilo prefix include
    Mega, Giga, Tera, and so forth.

L

LAN

    See Local Area Network.

LOR

    See Lock Order Reversal.

LPD

    See Line Printer Daemon.

Line Printer Daemon

    

Local Area Network

    A network used on a local area, e.g. office, home, or so forth.

Lock Order Reversal

    The FreeBSD kernel uses a number of resource locks to arbitrate
    contention for those resources. A run-time lock diagnostic system
    found in FreeBSD-CURRENT kernels (but removed for releases), called
    witness(4), detects the potential for deadlocks due to locking
    errors. (witness(4) is actually slightly conservative, so it is
    possible to get false positives.) A true positive report indicates
    that “if you were unlucky, a deadlock would have happened here”.

    True positive LORs tend to get fixed quickly, so check
    https://lists.FreeBSD.org/subscription/freebsd-current and the LORs
    Seen page before posting to the mailing lists.

M

MAC

    See Mandatory Access Control.

MADT

    See Multiple APIC Description Table.

MFC

    See Merge From Current.

MFH

    See Merge From Head.

MFS

    See Merge From Stable.

MFV

    See Merge From Vendor.

MIT

    See Massachusetts Institute of Technology.

MLS

    See Multi-Level Security.

MOTD

    See Message Of The Day.

MTA

    See Mail Transfer Agent.

MUA

    See Mail User Agent.

Mail Transfer Agent

    An application used to transfer email. An MTA has traditionally been
    part of the BSD base system. Today Sendmail is included in the base
    system, but there are many other MTAs, such as postfix, qmail and
    Exim.

Mail User Agent

    An application used by users to display and write email.

Mandatory Access Control

    

Massachusetts Institute of Technology

    

Merge From Current

    To merge functionality or a patch from the -CURRENT branch to
    another, most often -STABLE.

Merge From Head

    To merge functionality or a patch from a repository HEAD to an
    earlier branch.

Merge From Stable

    In the normal course of FreeBSD development, a change will be
    committed to the -CURRENT branch for testing before being merged to
    -STABLE. On rare occasions, a change will go into -STABLE first and
    then be merged to -CURRENT.

    This term is also used when a patch is merged from -STABLE to a
    security branch.

    See Also Merge From Current.

Merge From Vendor

    

Message Of The Day

    A message, usually shown on login, often used to distribute
    information to users of the system.

Multi-Level Security

    

Multiple APIC Description Table

    

N

NAT

    See Network Address Translation.

NDISulator

    See Project Evil.

NFS

    See Network File System.

NTFS

    See New Technology File System.

NTP

    See Network Time Protocol.

Network Address Translation

    A technique where IP packets are rewritten on the way through a
    gateway, enabling many machines behind the gateway to effectively
    share a single IP address.

Network File System

    

New Technology File System

    A filesystem developed by Microsoft and available in its “New
    Technology” operating systems, such as Windows® 2000, Windows NT®
    and Windows® XP.

Network Time Protocol

    A means of synchronizing clocks over a network.

O

OBE

    See Overtaken By Events.

ODMR

    See On-Demand Mail Relay.

OS

    See Operating System.

On-Demand Mail Relay

    

Operating System

    A set of programs, libraries and tools that provide access to the
    hardware resources of a computer. Operating systems range today from
    simplistic designs that support only one program running at a time,
    accessing only one device to fully multi-user, multi-tasking and
    multi-process systems that can serve thousands of users
    simultaneously, each of them running dozens of different
    applications.

Overtaken By Events

    Indicates a suggested change (such as a Problem Report or a feature
    request) which is no longer relevant or applicable due to such
    things as later changes to FreeBSD, changes in networking standards,
    the affected hardware having since become obsolete, and so forth.

P

PAE

    See Physical Address Extensions.

PAM

    See Pluggable Authentication Modules.

PAP

    See Password Authentication Protocol.

PC

    See Personal Computer.

PCNSFD

    See Personal Computer Network File System Daemon.

PDF

    See Portable Document Format.

PID

    See Process ID.

POLA

    See Principle Of Least Astonishment.

POP

    See Post Office Protocol.

POP3

    See Post Office Protocol Version 3.

PPD

    See PostScript Printer Description.

PPP

    See Point-to-Point Protocol.

PPPoA

    See PPP over ATM.

PPPoE

    See PPP over Ethernet.

PPP over ATM

    

PPP over Ethernet

    

PR

    See Problem Report.

PXE

    See Preboot eXecution Environment.

Password Authentication Protocol

    

Personal Computer

    

Personal Computer Network File System Daemon

    

Physical Address Extensions

    A method of enabling access to up to 64 GB of RAM on systems which
    only physically have a 32-bit wide address space (and would
    therefore be limited to 4 GB without PAE).

Pluggable Authentication Modules

    

Point-to-Point Protocol

    

Pointy Hat

    A mythical piece of headgear, much like a dunce cap, awarded to any
    FreeBSD committer who breaks the build, makes revision numbers go
    backwards, or creates any other kind of havoc in the source base.
    Any committer worth his or her salt will soon accumulate a large
    collection. The usage is (almost always?) humorous.

Portable Document Format

    

Post Office Protocol

    See Also Post Office Protocol Version 3.

Post Office Protocol Version 3

    A protocol for accessing email messages on a mail server,
    characterised by the messages usually being downloaded from the
    server to the client, as opposed to remaining on the server.

    See Also Internet Message Access Protocol.

PostScript Printer Description

    

Preboot eXecution Environment

    

Principle Of Least Astonishment

    As FreeBSD evolves, changes visible to the user should be kept as
    unsurprising as possible. For example, arbitrarily rearranging
    system startup variables in /etc/defaults/rc.conf violates POLA.
    Developers consider POLA when contemplating user-visible system
    changes.

Problem Report

    A description of some kind of problem that has been found in either
    the FreeBSD source or documentation. See Writing FreeBSD Problem
    Reports.

Process ID

    A number, unique to a particular process on a system, which
    identifies it and allows actions to be taken against it.

Project Evil

    The working title for the NDISulator, written by Bill Paul, who
    named it referring to how awful it is (from a philosophical
    standpoint) to need to have something like this in the first place.
    The NDISulator is a special compatibility module to allow Microsoft
    Windows™ NDIS miniport network drivers to be used with FreeBSD/i386.
    This is usually the only way to use cards where the driver is
    closed-source. See src/sys/compat/ndis/subr_ndis.c.

R

RA

    See Router Advertisement.

RAID

    See Redundant Array of Inexpensive Disks.

RAM

    See Random Access Memory.

RD

    See Received Data.

RFC

    See Request For Comments.

RISC

    See Reduced Instruction Set Computer.

RPC

    See Remote Procedure Call.

RS232C

    See Recommended Standard 232C.

RTS

    See Request To Send.

Random Access Memory

    

Revision Control System

    The Revision Control System (RCS) is one of the oldest software
    suites that implement “revision control” for plain files. It allows
    the storage, retrieval, archival, logging, identification and
    merging of multiple revisions for each file. RCS consists of many
    small tools that work together. It lacks some of the features found
    in more modern revision control systems, like Git, but it is very
    simple to install, configure, and start using for a small set of
    files.

    See Also Subversion.

Received Data

    An RS232C pin or wire that data is received on.

    See Also Transmitted Data.

Recommended Standard 232C

    A standard for communications between serial devices.

Reduced Instruction Set Computer

    An approach to processor design where the operations the hardware
    can perform are simplified but made as general purpose as possible.
    This can lead to lower power consumption, fewer transistors and in
    some cases, better performance and increased code density. Examples
    of RISC processors include the Alpha, SPARC®, ARM® and PowerPC®.

Redundant Array of Inexpensive Disks

    

Remote Procedure Call

    

Request For Comments

    A set of documents defining Internet standards, protocols, and so
    forth. See www.rfc-editor.org.

    Also used as a general term when someone has a suggested change and
    wants feedback.

Request To Send

    An RS232C signal requesting that the remote system commences
    transmission of data.

    See Also Clear To Send.

Router Advertisement

    

S

SCI

    See System Control Interrupt.

SCSI

    See Small Computer System Interface.

SG

    See Signal Ground.

SMB

    See Server Message Block.

SMP

    See Symmetric MultiProcessor.

SMTP

    See Simple Mail Transfer Protocol.

SMTP AUTH

    See SMTP Authentication.

SSH

    See Secure Shell.

STR

    See Suspend To RAM.

SVN

    See Subversion.

SMTP Authentication

    

Server Message Block

    

Signal Ground

    An RS232 pin or wire that is the ground reference for the signal.

Simple Mail Transfer Protocol

    

Secure Shell

    

Small Computer System Interface

    

Subversion

    Subversion is a version control system currently used by the FreeBSD
    project.

Suspend To RAM

    

Symmetric MultiProcessor

    

System Control Interrupt

    

T

TCP

    See Transmission Control Protocol.

TCP/IP

    See Transmission Control Protocol/Internet Protocol.

TD

    See Transmitted Data.

TFTP

    See Trivial FTP.

TGT

    See Ticket-Granting Ticket.

TSC

    See Time Stamp Counter.

Ticket-Granting Ticket

    

Time Stamp Counter

    A profiling counter internal to modern Pentium® processors that
    counts core frequency clock ticks.

Transmission Control Protocol

    A protocol that sits on top of (e.g.) the IP protocol and guarantees
    that packets are delivered in a reliable, ordered, fashion.

Transmission Control Protocol/Internet Protocol

    The term for the combination of the TCP protocol running over the IP
    protocol. Much of the Internet runs over TCP/IP.

Transmitted Data

    An RS232C pin or wire that data is transmitted on.

    See Also Received Data.

Trivial FTP

    

U

UDP

    See User Datagram Protocol.

UFS1

    See Unix File System Version 1.

UFS2

    See Unix File System Version 2.

UID

    See User ID.

URL

    See Uniform Resource Locator.

USB

    See Universal Serial Bus.

Uniform Resource Locator

    A method of locating a resource, such as a document on the Internet
    and a means to identify that resource.

Unix File System Version 1

    The original UNIX® file system, sometimes called the Berkeley Fast
    File System.

Unix File System Version 2

    An extension to UFS1, introduced in FreeBSD 5-CURRENT. UFS2 adds 64
    bit block pointers (breaking the 1T barrier), support for extended
    file storage and other features.

Universal Serial Bus

    A hardware standard used to connect a wide variety of computer
    peripherals to a universal interface.

User ID

    A unique number assigned to each user of a computer, by which the
    resources and permissions assigned to that user can be identified.

User Datagram Protocol

    A simple, unreliable datagram protocol which is used for exchanging
    data on a TCP/IP network. UDP does not provide error checking and
    correction like TCP.

V

VPN

    See Virtual Private Network.

Virtual Private Network

    A method of using a public telecommunication such as the Internet,
    to provide remote access to a localized network, such as a corporate
    LAN.

------------------------------------------------------------------------

Last modified on: July 6, 2023 by Sergio Carlavilla Delgado

Prev

Home

Next

Table of Contents

------------------------------------------------------------------------

Resources

-   Download PDF
-   Edit this page
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)

