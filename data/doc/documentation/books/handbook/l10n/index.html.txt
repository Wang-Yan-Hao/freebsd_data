
-    Preface
    -   Intended Audience
    -   Fourth Edition
    -   Third Edition
    -   Second Edition (2004)
    -   First Edition (2001)
    -   Organization of This Book
    -   Conventions used in this book
    -   Acknowledgments
-    Part I. Getting Started
-    Chapter 1. Introduction
    -   1.1. Synopsis
    -   1.2. Welcome to FreeBSD!
    -   1.3. About the FreeBSD Project
-    Chapter 2. Installing FreeBSD
    -   2.1. Synopsis
    -   2.2. Minimum Hardware Requirements
    -   2.3. Pre-Installation Tasks
    -   2.4. Starting the Installation
    -   2.5. Using bsdinstall
    -   2.6. Allocating Disk Space
    -   2.7. Fetching Distribution Files
    -   2.8. Network Interfaces, Accounts, Time Zone, Services and
        Hardening
    -   2.9. Troubleshooting
    -   2.10. Using the Live CD
-    Chapter 3. FreeBSD Basics
    -   3.1. Synopsis
    -   3.2. Virtual Consoles and Terminals
    -   3.3. Users and Basic Account Management
    -   3.4. Permissions
    -   3.5. Directory Structure
    -   3.6. Disk Organization
    -   3.7. Mounting and Unmounting File Systems
    -   3.8. Processes and Daemons
    -   3.9. Shells
    -   3.10. Text Editors
    -   3.11. Devices and Device Nodes
    -   3.12. Manual Pages
-    Chapter 4. Installing Applications: Packages and Ports
    -   4.1. Synopsis
    -   4.2. Overview of Software Installation
    -   4.3. Finding Software
    -   4.4. Using pkg for Binary Package Management
    -   4.5. Using the Ports Collection
    -   4.6. Building Packages with Poudriere
    -   4.7. Post-Installation Considerations
    -   4.8. Dealing with Broken Ports
-    Chapter 5. The X Window System
    -   5.1. Synopsis
    -   5.2. Installing Xorg
    -   5.3. Graphic card drivers
    -   5.4. Xorg Configuration
    -   5.5. Using Fonts in Xorg
-    Chapter 6. Wayland
    -   6.1. Wayland Synopsis
    -   6.2. The Wayfire Compositor
    -   6.3. The Hikari Compositor
    -   6.4. The Sway Compositor
    -   6.5. Using Xwayland
    -   6.6. Remote Desktop Using VNC
    -   6.7. Wayland Login Manager
    -   6.8. Useful Utilities
-    Chapter 7. Network
    -   7.1. Synopsis
    -   7.2. Setting up the Network
    -   7.3. Wired Networks
    -   7.4. Wireless Networks
    -   7.5. Hostname
    -   7.6. DNS
    -   7.7. Troubleshooting
-    Part II. Common Tasks
-    Chapter 8. Desktop Environments
    -   8.1. Synopsis
    -   8.2. Desktop Environments
    -   8.3. Browsers
    -   8.4. Development tools
    -   8.5. Desktop office productivity
    -   8.6. Document Viewers
    -   8.7. Finance
-    Chapter 9. Multimedia
    -   9.1. Synopsis
    -   9.2. Setting Up the Sound Card
    -   9.3. Audio players
    -   9.4. Video players
    -   9.5. Conferencing and Meetings
    -   9.6. Image Scanners
-    Chapter 10. Configuring the FreeBSD Kernel
    -   10.1. Synopsis
    -   10.2. Why Build a Custom Kernel?
    -   10.3. Finding the System Hardware
    -   10.4. The Configuration File
    -   10.5. Building and Installing a Custom Kernel
    -   10.6. If Something Goes Wrong
-    Chapter 11. Printing
    -   11.1. Quick Start
    -   11.2. Printer Connections
    -   11.3. Common Page Description Languages
    -   11.4. Direct Printing
    -   11.5. LPD (Line Printer Daemon)
    -   11.6. Other Printing Systems
-    Chapter 12. Linux Binary Compatibility
    -   12.1. Synopsis
    -   12.2. Configuring Linux Binary Compatibility
    -   12.3. Linux userlands
    -   12.4. Advanced Topics
-    Chapter 13. WINE
    -   13.1. Synopsis
    -   13.2. WINE Overview & Concepts
    -   13.3. Installing WINE on FreeBSD
    -   13.4. Running a First WINE Program on FreeBSD
    -   13.5. Configuring WINE Installation
    -   13.6. WINE Management GUIs
    -   13.7. WINE in Multi-User FreeBSD Installations
    -   13.8. WINE on FreeBSD FAQ
-    Part III. System Administration
-    Chapter 14. Configuration and Tuning
    -   14.1. Synopsis
    -   14.2. Starting Services
    -   14.3. Configuring cron(8)
    -   14.4. Managing Services in FreeBSD
    -   14.5. Configuring System Logging
    -   14.6. Configuration Files
    -   14.7. Tuning with sysctl(8)
    -   14.8. Tuning Disks
    -   14.9. Tuning Kernel Limits
    -   14.10. Adding Swap Space
    -   14.11. Power and Resource Management
-    Chapter 15. The FreeBSD Booting Process
    -   15.1. Synopsis
    -   15.2. FreeBSD Boot Process
    -   15.3. Device Hints
    -   15.4. Shutdown Sequence
-    Chapter 16. Security
    -   16.1. Synopsis
    -   16.2. Introduction
    -   16.3. One-time Passwords
    -   16.4. TCP Wrapper
    -   16.5. Kerberos
    -   16.6. OpenSSL
    -   16.7. VPN over IPsec
    -   16.8. OpenSSH
    -   16.9. Access Control Lists
    -   16.10. Monitoring Third Party Security Issues
    -   16.11. FreeBSD Security Advisories
    -   16.12. Process Accounting
    -   16.13. Resource Limits
    -   16.14. Shared Administration with Sudo
    -   16.15. Using doas as an alternative to sudo
-    Chapter 17. Jails
    -   17.1. Synopsis
    -   17.2. Terms Related to Jails
    -   17.3. Creating and Controlling Jails
    -   17.4. Fine Tuning and Administration
    -   17.5. Updating Multiple Jails
    -   17.6. Managing Jails with ezjail
-    Chapter 18. Mandatory Access Control
    -   18.1. Synopsis
    -   18.2. Key Terms
    -   18.3. Understanding MAC Labels
    -   18.4. Planning the Security Configuration
    -   18.5. Available MAC Policies
    -   18.6. User Lock Down
    -   18.7. Nagios in a MAC Jail
    -   18.8. Troubleshooting the MAC Framework
-    Chapter 19. Security Event Auditing
    -   19.1. Synopsis
    -   19.2. Key Terms
    -   19.3. Audit Configuration
    -   19.4. Working with Audit Trails
-    Chapter 20. Storage
    -   20.1. Synopsis
    -   20.2. Adding Disks
    -   20.3. Resizing and Growing Disks
    -   20.4. USB Storage Devices
    -   20.5. Creating and Using CD Media
    -   20.6. Creating and Using DVD Media
    -   20.7. Creating and Using Floppy Disks
    -   20.8. Using NTFS Disks
    -   20.9. Backup Basics
    -   20.10. Memory Disks
    -   20.11. File System Snapshots
    -   20.12. Disk Quotas
    -   20.13. Encrypting Disk Partitions
    -   20.14. Encrypting Swap
    -   20.15. Highly Available Storage (HAST)
-    Chapter 21. GEOM: Modular Disk Transformation Framework
    -   21.1. Synopsis
    -   21.2. RAID0 - Striping
    -   21.3. RAID1 - Mirroring
    -   21.4. RAID3 - Byte-level Striping with Dedicated Parity
    -   21.5. Software RAID Devices
    -   21.6. GEOM Gate Network
    -   21.7. Labeling Disk Devices
    -   21.8. UFS Journaling Through GEOM
-    Chapter 22. The Z File System (ZFS)
    -   22.1. What Makes ZFS Different
    -   22.2. Quick Start Guide
    -   22.3. zpool Administration
    -   22.4. zfs Administration
    -   22.5. Delegated Administration
    -   22.6. Advanced Topics
<<<<<<< HEAD
=======
    -   22.7. Further Resources
    -   22.8. ZFS Features and Terminology
-    Chapter 23. Other File Systems
    -   23.1. Synopsis
    -   23.2. Linux® File Systems
-    Chapter 24. Virtualization
    -   24.1. Synopsis
    -   24.2. FreeBSD as a Guest on Parallels Desktop for macOS®
    -   24.3. FreeBSD as a Guest on VMware Fusion for macOS®
    -   24.4. FreeBSD as a Guest on VirtualBox™
    -   24.5. FreeBSD as a Host with VirtualBox™
    -   24.6. FreeBSD as a Host with bhyve
    -   24.7. FreeBSD as a Xen™-Host
-    Chapter 25. Localization - i18n/L10n Usage and Setup
    -   25.1. Synopsis
    -   25.2. Using Localization
    -   25.3. Finding i18n Applications
    -   25.4. Locale Configuration for Specific Languages
-    Chapter 26. Updating and Upgrading FreeBSD
    -   26.1. Synopsis
    -   26.2. FreeBSD Update
    -   26.3. Updating Bootcode
    -   26.4. Updating the Documentation Set
    -   26.5. Tracking a Development Branch
    -   26.6. Updating FreeBSD from Source
    -   26.7. Tracking for Multiple Machines
-    Chapter 27. DTrace
    -   27.1. Synopsis
    -   27.2. Implementation Differences
    -   27.3. Enabling DTrace Support
    -   27.4. Using DTrace
-    Chapter 28. USB Device Mode / USB OTG
    -   28.1. Synopsis
    -   28.2. USB Virtual Serial Ports
    -   28.3. USB Device Mode Network Interfaces
    -   28.4. USB Virtual Storage Device
-    Part IV. Network Communication
-    Chapter 29. Serial Communications
    -   29.1. Synopsis
    -   29.2. Serial Terminology and Hardware
    -   29.3. Terminals
    -   29.4. Dial-in Service
    -   29.5. Dial-out Service
    -   29.6. Setting Up the Serial Console
-    Chapter 30. PPP
    -   30.1. Synopsis
    -   30.2. Configuring PPP
    -   30.3. Troubleshooting PPP Connections
    -   30.4. Using PPP over Ethernet (PPPoE)
    -   30.5. Using PPP over ATM (PPPoA)
-    Chapter 31. Electronic Mail
    -   31.1. Synopsis
    -   31.2. Mail Components
    -   31.3. Sendmail Configuration Files
    -   31.4. Changing the Mail Transfer Agent
    -   31.5. Troubleshooting
    -   31.6. Advanced Topics
    -   31.7. Setting Up to Send Only
    -   31.8. Using Mail with a Dialup Connection
    -   31.9. SMTP Authentication
    -   31.10. Mail User Agents
    -   31.11. Using fetchmail
    -   31.12. Using procmail
-    Chapter 32. Network Servers
    -   32.1. Synopsis
    -   32.2. The inetd Super-Server
    -   32.3. Network File System (NFS)
    -   32.4. Network Information System (NIS)
    -   32.5. Lightweight Directory Access Protocol (LDAP)
    -   32.6. Dynamic Host Configuration Protocol (DHCP)
    -   32.7. Domain Name System (DNS)
    -   32.8. Apache HTTP Server
    -   32.9. File Transfer Protocol (FTP)
    -   32.10. File and Print Services for Microsoft® Windows® Clients
        (Samba)
    -   32.11. Clock Synchronization with NTP
    -   32.12. iSCSI Initiator and Target Configuration
-    Chapter 33. Firewalls
    -   33.1. Synopsis
    -   33.2. Firewall Concepts
    -   33.3. PF
    -   33.4. IPFW
    -   33.5. IPFILTER (IPF)
    -   33.6. Blacklistd
-    Chapter 34. Advanced Networking
    -   34.1. Synopsis
    -   34.2. Gateways and Routes
    -   34.3. Virtual Hosts
    -   34.4. Wireless Advanced Authentication
    -   34.5. Wireless Ad-hoc Mode
    -   34.6. USB Tethering
    -   34.7. Bluetooth
    -   34.8. Bridging
    -   34.9. Link Aggregation and Failover
    -   34.10. Diskless Operation with PXE
    -   34.11. Common Address Redundancy Protocol (CARP)
    -   34.12. VLANs
-    Part V. Appendices
-    Appendix A. Obtaining FreeBSD
    -   A.1. Mirrors
    -   A.2. Using Git
    -   A.3. Using Subversion
    -   A.4. CD and DVD Sets
-    Appendix B. Bibliography
    -   B.1. FreeBSD Bibliography
    -   B.2. Security Reference
    -   B.3. UNIX® History
    -   B.4. Periodicals, Journals, and Magazines
-    Appendix C. Resources on the Internet
    -   C.1. Websites
    -   C.2. Mailing Lists
    -   C.3. Usenet Newsgroups
-    Appendix D. OpenPGP Keys
    -   D.1. Officers
-    FreeBSD Glossary
-    Colophon
-   
-   

Book menu

Chapter 25. Localization - i18n/L10n Usage and Setup

Table of Contents

-   25.1. Synopsis
-   25.2. Using Localization
-   25.3. Finding i18n Applications
-   25.4. Locale Configuration for Specific Languages

25.1. Synopsis

FreeBSD is a distributed project with users and contributors located all
over the world. As such, FreeBSD supports localization into many
languages, allowing users to view, input, or process data in non-English
languages. One can choose from most of the major languages, including,
but not limited to: Chinese, German, Japanese, Korean, French, Russian,
and Vietnamese.

The term internationalization has been shortened to i18n, which
represents the number of letters between the first and the last letters
of internationalization. L10n uses the same naming scheme, but from
localization. The i18n/L10n methods, protocols, and applications allow
users to use languages of their choice.

This chapter discusses the internationalization and localization
features of FreeBSD. After reading this chapter, you will know:

-   How locale names are constructed.

-   How to set the locale for a login shell.

-   How to configure the console for non-English languages.

-   How to configure Xorg for different languages.

-   How to find i18n-compliant applications.

-   Where to find more information for configuring specific languages.

Before reading this chapter, you should:

-   Know how to install additional third-party applications.

25.2. Using Localization

Localization settings are based on three components: the language code,
country code, and encoding. Locale names are constructed from these
parts as follows:

    LanguageCode_CountryCode.Encoding

The LanguageCode and CountryCode are used to determine the country and
the specific language variation. Common Language and Country Codes
provides some examples of LanguageCode_CountryCode:

+-----------------------------------+-----------------------------------+
| LanguageCode_Country Code         | Description                       |
+===================================+===================================+
| en_US                             | English, United States            |
+-----------------------------------+-----------------------------------+
| ru_RU                             | Russian, Russia                   |
+-----------------------------------+-----------------------------------+
| zh_TW                             | Traditional Chinese, Taiwan       |
+-----------------------------------+-----------------------------------+

: Table 1. Common Language and Country Codes

A complete listing of available locales can be found by typing:

    % locale -a | more

To determine the current locale setting:

    % locale

Language specific character sets, such as ISO8859-1, ISO8859-15, KOI8-R,
and CP437, are described in multibyte(3). The active list of character
sets can be found at the IANA Registry.

Some languages, such as Chinese or Japanese, cannot be represented using
ASCII characters and require an extended language encoding using either
wide or multibyte characters. Examples of wide or multibyte encodings
include EUC and Big5. Older applications may mistake these encodings for
control characters while newer applications usually recognize these
characters. Depending on the implementation, users may be required to
compile an application with wide or multibyte character support, or to
configure it correctly.

+-----------------------------------+-----------------------------------+
|                                   | FreeBSD uses Xorg-compatible      |
|                                   | locale encodings.                 |
+-----------------------------------+-----------------------------------+

The rest of this section describes the various methods for configuring
the locale on a FreeBSD system. The next section will discuss the
considerations for finding and compiling applications with i18n support.

25.2.1. Setting Locale for Login Shell

Locale settings are configured either in a user’s ~/.login_conf or in
the startup file of the user’s shell: ~/.profile, ~/.bashrc, or
~/.cshrc.

Two environment variables should be set:

-   LANG, which sets the locale

-   MM_CHARSET, which sets the MIME character set used by applications

In addition to the user’s shell configuration, these variables should
also be set for specific application configuration and Xorg
configuration.

Two methods are available for making the needed variable assignments:
the login class method, which is the recommended method, and the startup
file method. The next two sections demonstrate how to use both methods.

25.2.1.1. Login Classes Method

This first method is the recommended method as it assigns the required
environment variables for locale name and MIME character sets for every
possible shell. This setup can either be performed by each user or it
can be configured for all users by the superuser.

This minimal example sets both variables for Latin-1 encoding in the
.login_conf of an individual user’s home directory:

    me:\
        :charset=ISO-8859-1:\
        :lang=de_DE.ISO8859-1:

Here is an example of a user’s ~/.login_conf that sets the variables for
Traditional Chinese in BIG-5 encoding. More variables are needed because
some applications do not correctly respect locale variables for Chinese,
Japanese, and Korean:

    #Users who do not wish to use monetary units or time formats
    #of Taiwan can manually change each variable
    me:\
        :lang=zh_TW.Big5:\
        :setenv=LC_ALL=zh_TW.Big5,LC_COLLATE=zh_TW.Big5,LC_CTYPE=zh_TW.Big5,LC_MESSAGES=zh_TW.Big5,LC_MONETARY=zh_TW.Big5,LC_NUMERIC=zh_TW.Big5,LC_TIME=zh_TW.Big5:\
        :charset=big5:\
        :xmodifiers="@im=gcin": #Set gcin as the XIM Input Server

Alternately, the superuser can configure all users of the system for
localization. The following variables in /etc/login.conf are used to set
the locale and MIME character set:

    language_name|Account Type Description:\
        :charset=MIME_charset:\
        :lang=locale_name:\
        :tc=default:

So, the previous Latin-1 example would look like this:

    german|German Users Accounts:\
        :charset=ISO-8859-1:\
        :lang=de_DE.ISO8859-1:\
        :tc=default:

See login.conf(5) for more details about these variables. Note that it
already contains pre-defined russian class.

Whenever /etc/login.conf is edited, remember to execute the following
command to update the capability database:

    # cap_mkdb /etc/login.conf

+-----------------------------------+-----------------------------------+
|                                   | For an end user, the cap_mkdb     |
|                                   | command will need to be run on    |
|                                   | their ~/.login_conf for any       |
|                                   | changes to take effect.           |
+-----------------------------------+-----------------------------------+

25.2.1.1.1. Utilities Which Change Login Classes

In addition to manually editing /etc/login.conf, several utilities are
available for setting the locale for newly created users.

When using vipw to add new users, specify the language to set the
locale:

    user:password:1111:11:language:0:0:User Name:/home/user:/bin/sh

When using adduser to add new users, the default language can be
pre-configured for all new users or specified for an individual user.

If all new users use the same language, set defaultclass=language in
/etc/adduser.conf.

To override this setting when creating a user, either input the required
locale at this prompt:

    Enter login class: default []:

or specify the locale to set when invoking adduser:

    # adduser -class language

If pw is used to add new users, specify the locale as follows:

    # pw useradd user_name -L language

To change the login class of an existing user, chpass can be used.
Invoke it as superuser and provide the username to edit as the argument.

    # chpass user_name

25.2.1.2. Shell Startup File Method

This second method is not recommended as each shell that is used
requires manual configuration, where each shell has a different
configuration file and differing syntax. As an example, to set the
German language for the sh shell, these lines could be added to
~/.profile to set the shell for that user only. These lines could also
be added to /etc/profile or /usr/share/skel/dot.profile to set that
shell for all users:

    LANG=de_DE.ISO8859-1; export LANG
    MM_CHARSET=ISO-8859-1; export MM_CHARSET

However, the name of the configuration file and the syntax used differs
for the csh shell. These are the equivalent settings for ~/.login,
/etc/csh.login, or /usr/share/skel/dot.login:

    setenv LANG de_DE.ISO8859-1
    setenv MM_CHARSET ISO-8859-1

To complicate matters, the syntax needed to configure Xorg in ~/.xinitrc
also depends upon the shell. The first example is for the sh shell and
the second is for the csh shell:

    LANG=de_DE.ISO8859-1; export LANG

    setenv LANG de_DE.ISO8859-1

25.2.2. Console Setup

Several localized fonts are available for the console. To see a listing
of available fonts, type ls /usr/share/syscons/fonts. To configure the
console font, specify the font_name, without the .fnt suffix, in
/etc/rc.conf:

    font8x16=font_name
    font8x14=font_name
    font8x8=font_name

The keymap and screenmap can be set by adding the following to
/etc/rc.conf:

    scrnmap=screenmap_name
    keymap=keymap_name
    keychange="fkey_number sequence"

To see the list of available screenmaps, type
ls /usr/share/syscons/scrnmaps. Do not include the .scm suffix when
specifying screenmap_name. A screenmap with a corresponding mapped font
is usually needed as a workaround for expanding bit 8 to bit 9 on a VGA
adapter’s font character matrix so that letters are moved out of the
pseudographics area if the screen font uses a bit 8 column.

To see the list of available keymaps, type
ls /usr/share/syscons/keymaps. When specifying the keymap_name, do not
include the .kbd suffix. To test keymaps without rebooting, use
kbdmap(1).

The keychange entry is usually needed to program function keys to match
the selected terminal type because function key sequences cannot be
defined in the keymap.

Next, set the correct console terminal type in /etc/ttys for all virtual
terminal entries. Defined Terminal Types for Character Sets summarizes
the available terminal types.:

+-----------------------------------+-----------------------------------+
| Character Set                     | Terminal Type                     |
+===================================+===================================+
| ISO8859-1 or ISO8859-15           | cons25l1                          |
+-----------------------------------+-----------------------------------+
| ISO8859-2                         | cons25l2                          |
+-----------------------------------+-----------------------------------+
| ISO8859-7                         | cons25l7                          |
+-----------------------------------+-----------------------------------+
| KOI8-R                            | cons25r                           |
+-----------------------------------+-----------------------------------+
| KOI8-U                            | cons25u                           |
+-----------------------------------+-----------------------------------+
| CP437 (VGA default)               | cons25                            |
+-----------------------------------+-----------------------------------+
| US-ASCII                          | cons25w                           |
+-----------------------------------+-----------------------------------+

: Table 2. Defined Terminal Types for Character Sets

For languages with wide or multibyte characters, install a console for
that language from the FreeBSD Ports Collection. The available ports are
summarized in Available Console from Ports Collection. Once installed,
refer to the port’s pkg-message or man pages for configuration and usage
instructions.

+-----------------------------------+-----------------------------------+
| Language                          | Port Location                     |
+===================================+===================================+
| Traditional Chinese (BIG-5)       | chinese/big5con                   |
+-----------------------------------+-----------------------------------+
| Chinese/Japanese/Korean           | chinese/cce                       |
+-----------------------------------+-----------------------------------+
| Chinese/Japanese/Korean           | chinese/zhcon                     |
+-----------------------------------+-----------------------------------+
| Japanese                          | chinese/kon2                      |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/kon2-14dot               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/kon2-16dot               |
+-----------------------------------+-----------------------------------+

: Table 3. Available Console from Ports Collection

If moused is enabled in /etc/rc.conf, additional configuration may be
required. By default, the mouse cursor of the syscons(4) driver occupies
the 0xd0-0xd3 range in the character set. If the language uses this
range, move the cursor’s range by adding the following line to
/etc/rc.conf:

    mousechar_start=3

25.2.3. Xorg Setup

The X Window System describes how to install and configure Xorg. When
configuring Xorg for localization, additional fonts and input methods
are available from the FreeBSD Ports Collection. Application specific
i18n settings such as fonts and menus can be tuned in ~/.Xresources and
should allow users to view their selected language in graphical
application menus.

The X Input Method (XIM) protocol is an Xorg standard for inputting
non-English characters. Available Input Methods summarizes the input
method applications which are available in the FreeBSD Ports Collection.
Additional Fcitx and Uim applications are also available.

+-----------------------------------+-----------------------------------+
| Language                          | Input Method                      |
+===================================+===================================+
| Chinese                           | chinese/gcin                      |
+-----------------------------------+-----------------------------------+
| Chinese                           | chinese/ibus-chewing              |
+-----------------------------------+-----------------------------------+
| Chinese                           | chinese/ibus-pinyin               |
+-----------------------------------+-----------------------------------+
| Chinese                           | chinese/oxim                      |
+-----------------------------------+-----------------------------------+
| Chinese                           | chinese/scim-fcitx                |
+-----------------------------------+-----------------------------------+
| Chinese                           | chinese/scim-pinyin               |
+-----------------------------------+-----------------------------------+
| Chinese                           | chinese/scim-tables               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/ibus-anthy               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/ibus-mozc                |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/ibus-skk                 |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/im-ja                    |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/kinput2                  |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-anthy               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-canna               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-honoka              |
+-----------------------------------+-----------------------------------+
| Japanese                          | j                                 |
|                                   | apanese/scim-honoka-plugin-romkan |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-honoka-plugin-wnn   |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-prime               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-skk                 |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-tables              |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-tomoe               |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/scim-uim                 |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/skkinput                 |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/skkinput3                |
+-----------------------------------+-----------------------------------+
| Japanese                          | japanese/uim-anthy                |
+-----------------------------------+-----------------------------------+
| Korean                            | korean/ibus-hangul                |
+-----------------------------------+-----------------------------------+
| Korean                            | korean/imhangul                   |
+-----------------------------------+-----------------------------------+
| Korean                            | korean/nabi                       |
+-----------------------------------+-----------------------------------+
| Korean                            | korean/scim-hangul                |
+-----------------------------------+-----------------------------------+
| Korean                            | korean/scim-tables                |
+-----------------------------------+-----------------------------------+
| Vietnamese                        | vietnamese/xvnkb                  |
+-----------------------------------+-----------------------------------+
| Vietnamese                        | vietnamese/x-unikey               |
+-----------------------------------+-----------------------------------+

: Table 4. Available Input Methods

25.3. Finding i18n Applications

i18n applications are programmed using i18n kits under libraries. These
allow developers to write a simple file and translate displayed menus
and texts to each language.

The FreeBSD Ports Collection contains many applications with built-in
support for wide or multibyte characters for several languages. Such
applications include i18n in their names for easy identification.
However, they do not always support the language needed.

Some applications can be compiled with the specific charset. This is
usually done in the port’s Makefile or by passing a value to configure.
Refer to the i18n documentation in the respective FreeBSD port’s source
for more information on how to determine the needed configure value or
the port’s Makefile to determine which compile options to use when
building the port.

25.4. Locale Configuration for Specific Languages

This section provides configuration examples for localizing a FreeBSD
system for the Russian language. It then provides some additional
resources for localizing other languages.

25.4.1. Russian Language (KOI8-R Encoding)

This section shows the specific settings needed to localize a FreeBSD
system for the Russian language. Refer to Using Localization for a more
complete description of each type of setting.

To set this locale for the login shell, add the following lines to each
user’s ~/.login_conf:

    me:My Account:\
        :charset=KOI8-R:\
        :lang=ru_RU.KOI8-R:

To configure the console, add the following lines to /etc/rc.conf:

    keymap="ru.utf-8"
    scrnmap="utf-82cp866"
    font8x16="cp866b-8x16"
    font8x14="cp866-8x14"
    font8x8="cp866-8x8"
    mousechar_start=3

For each ttyv entry in /etc/ttys, use cons25r as the terminal type.

To configure printing, a special output filter is needed to convert from
KOI8-R to CP866 since most printers with Russian characters come with
hardware code page CP866. FreeBSD includes a default filter for this
purpose, /usr/libexec/lpr/ru/koi2alt. To use this filter, add this entry
to /etc/printcap:

    lp|Russian local line printer:\
        :sh:of=/usr/libexec/lpr/ru/koi2alt:\
        :lp=/dev/lpt0:sd=/var/spool/output/lpd:lf=/var/log/lpd-errs:

Refer to printcap(5) for a more detailed explanation.

To configure support for Russian filenames in mounted MS-DOS® file
systems, include -L and the locale name when adding an entry to
/etc/fstab:

    /dev/ad0s2      /dos/c  msdos   rw,-Lru_RU.KOI8-R 0 0

Refer to mount_msdosfs(8) for more details.

To configure Russian fonts for Xorg, install the
x11-fonts/xorg-fonts-cyrillic package. Then, check the "Files" section
in /etc/X11/xorg.conf. The following line must be added before any other
FontPath entries:

    FontPath   "/usr/local/lib/X11/fonts/cyrillic"

Additional Cyrillic fonts are available in the Ports Collection.

To activate a Russian keyboard, add the following to the "Keyboard"
section of /etc/xorg.conf:

    Option "XkbLayout"   "us,ru"
    Option "XkbOptions"  "grp:toggle"

Make sure that XkbDisable is commented out in that file.

For grp:toggle use Right Alt, for grp:ctrl_shift_toggle use Ctrl+Shift.
For grp:caps_toggle use CapsLock. The old CapsLock function is still
available in LAT mode only using Shift+CapsLock. grp:caps_toggle does
not work in Xorg for some unknown reason.

If the keyboard has "Windows®" keys, and some non-alphabetical keys are
mapped incorrectly, add the following line to /etc/xorg.conf:

    Option "XkbVariant" ",winkeys"

+-----------------------------------+-----------------------------------+
|                                   | The Russian XKB keyboard may not  |
|                                   | work with non-localized           |
|                                   | applications. Minimally localized |
|                                   | applications should call a        |
|                                   | XtSe                              |
|                                   | tLanguageProc (NULL, NULL, NULL); |
|                                   | function early in the program.    |
+-----------------------------------+-----------------------------------+

See http://koi8.pp.ru/xwin.html for more instructions on localizing Xorg
applications. For more general information about KOI8-R encoding, refer
to http://koi8.pp.ru/.

25.4.2. Additional Language-Specific Resources

This section lists some additional resources for configuring other
locales.

Traditional Chinese for Taiwan

    The FreeBSD-Taiwan Project has a Chinese HOWTO for FreeBSD at
    http://netlab.cse.yzu.edu.tw/~statue/freebsd/zh-tut/.

Greek Language Localization

    A complete article on Greek support in FreeBSD is available here, in
    Greek only, as part of the official FreeBSD Greek documentation.

Japanese and Korean Language Localization

    For Japanese, refer to http://www.jp.FreeBSD.org/, and for Korean,
    refer to http://www.kr.FreeBSD.org/.

Non-English FreeBSD Documentation

    Some FreeBSD contributors have translated parts of the FreeBSD
    documentation to other languages. They are available through links
    on the FreeBSD web site or in /usr/share/doc.

------------------------------------------------------------------------

Last modified on: July 6, 2023 by Sergio Carlavilla Delgado

Prev

Home

Next

Table of Contents

-   25.1. Synopsis
-   25.2. Using Localization
-   25.3. Finding i18n Applications
-   25.4. Locale Configuration for Specific Languages

------------------------------------------------------------------------

Resources

-   Download PDF
-   Edit this page
>>>>>>> b1bb5fd9 (Processing txt files in data/doc)

